{"version":3,"sources":["ArticlesElements/CarTemplate.js","Pages/User/MyTemplateCar.js"],"names":["CarTemplate","state","isFetching","delete","setState","fetch","api","urlApi","method","headers","Accept","Authorization","props","user","apiToken","body","JSON","stringify","templateId","template","_id","then","response","json","data","error","errors","map","item","toast","msg","reload","splitArr","arr","chunks","Array","_","c","filter","n","i","className","LoadingFixed","isLoading","this","style","minWidth","car","name","Button","type","paddingVertical","to","onClick","src","photo","path","alt","typesCar","length","carTypesList","itemY","index","items","find","itemX","id","key","info","carId","Object","entries","property","additionally","itemZ","extraParams","contractInfo","string","contractParams","label","org","value","paymentInfo","paymentParams","React","Component","OfferCreate","carTemplates","getCarTemplates","padding","marginRight","marginLeft","borderBottom","Loading","transitionName","transitionEnterTimeout","transitionLeaveTimeout","display","connect"],"mappings":"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","file":"static/js/15.a327fac9.chunk.js","sourcesContent":["// App\r\nimport React from \"react\";\r\n\r\n// Elements\r\nimport Button from \"../Elements/Button\";\r\nimport LoadingFixed from \"../Elements/LoadingFixed\";\r\nimport settings from \"../config/settings\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactComponent as PayIco } from \"../img/pay-ico.svg\";\r\nimport { ReactComponent as Dogovor } from \"../img/dogovor.svg\";\r\nimport api from \"../config/api\";\r\nimport carTypesList from \"../config/baseInfo/carTypesList\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  extraParams,\r\n  contractParams,\r\n  paymentParams,\r\n} from \"../config/baseInfo/carParams\";\r\n\r\nclass CarTemplate extends React.Component {\r\n  state = {\r\n    isFetching: false,\r\n  };\r\n  delete = () => {\r\n    this.setState({ isFetching: true }, () => {\r\n      fetch(`${api.urlApi}/api/car/deleteCarTemplate`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.props.user.apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          templateId: this.props.template._id,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            data.errors.map((item) => {\r\n              toast.error(item.msg);\r\n            });\r\n            this.setState({\r\n              isFetching: false,\r\n            });\r\n          }\r\n          if (!data.error) {\r\n            this.setState(\r\n              {\r\n                isFetching: false,\r\n              },\r\n              () => {\r\n                this.props.reload();\r\n              }\r\n            );\r\n          }\r\n        });\r\n    });\r\n  };\r\n  splitArr = (arr, chunks) =>\r\n    [...Array(chunks)].map((_, c) => arr.filter((n, i) => i % chunks === c));\r\n  render() {\r\n    return (\r\n      <div className=\"auto-template mt-4\">\r\n        <LoadingFixed isLoading={this.state.isFetching} />\r\n        <div className=\"head-template align-items-center row\">\r\n          <div\r\n            className=\"px-3 title-auto\"\r\n            style={{\r\n              minWidth: \"280px\",\r\n            }}\r\n          >\r\n            {this.props.template.car.name}\r\n          </div>\r\n          <div className=\"row mx-0 templateAction\">\r\n            <div className=\"px-3\">\r\n              <Button\r\n                type=\"fill\"\r\n                paddingVertical=\"6px\"\r\n                className=\"f-12 position-relative\"\r\n              >\r\n                Редактировать\r\n                <Link\r\n                  to={`/edit-template-auto/${this.props.template._id}`}\r\n                  className=\"sharected-link\"\r\n                ></Link>\r\n              </Button>\r\n            </div>\r\n            <div className=\"px-3\">\r\n              <Button\r\n                type=\"fill\"\r\n                paddingVertical=\"6px\"\r\n                className=\"bg-gray f-12 \"\r\n                onClick={this.delete}\r\n              >\r\n                Удалить\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-4 template-content\">\r\n          <div className=\"templatePhoto\">\r\n            <img\r\n              className=\"w-100\"\r\n              src={this.props.template.car.photo.path}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"px-3 f-14 carDescription\">\r\n            {this.props.template.car.typesCar.length === carTypesList.length &&\r\n              \"Любая\"}\r\n            {this.props.template.car.typesCar.length !== carTypesList.length &&\r\n              this.props.template.car.typesCar.map((itemY, index, items) => {\r\n                let type = carTypesList.find((itemX) => itemY === itemX.id);\r\n                return (\r\n                  <div key={index}>\r\n                    <div>\r\n                      <b>{type.name}</b>\r\n                    </div>\r\n                    {this.props.template.car.info &&\r\n                      this.props.template.car.info.find(\r\n                        (itemX) => itemX.carId === itemY\r\n                      ) &&\r\n                      Object.entries(\r\n                        this.props.template.car.info.find(\r\n                          (itemX) => itemX.carId === itemY\r\n                        )\r\n                      ).map((itemY, index) => {\r\n                        if (itemY[0] !== \"carId\") {\r\n                          let name;\r\n                          if (itemY[0] === \"capacity\")\r\n                            name = \"Грузоподъемность\";\r\n                          if (itemY[0] === \"awning\") name = \"Тентовый\";\r\n                          if (itemY[0] === \"typeGazel\") name = \"Тип Газели\";\r\n                          if (name) {\r\n                            return (\r\n                              <div key={index}>\r\n                                {name}: {itemY[1]}\r\n                              </div>\r\n                            );\r\n                          }\r\n                        }\r\n                      })}\r\n                    {this.props.template.car.property && (\r\n                      <div key={index}>\r\n                        Свойство: {this.props.template.car.property}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"row px-3\">\r\n            {this.props.template.car.additionally &&\r\n              this.splitArr(\r\n                this.props.template.car.additionally,\r\n                this.props.template.car.additionally.length > 4 ? 2 : 1\r\n              ).map((itemY, i) => {\r\n                {\r\n                  return (\r\n                    <div className=\"additionally\">\r\n                      {itemY.map((itemZ, index) => {\r\n                        return (\r\n                          <span className=\"position-relative left-angle f-12\">\r\n                            {\r\n                              extraParams.find((itemX) => itemZ.id === itemX.id)\r\n                                .name\r\n                            }\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n          </div>\r\n          <div className=\"col contractInfoTemplate\">\r\n            {this.props.template.car.contractInfo &&\r\n              !!this.props.template.car.contractInfo.length && (\r\n                <span className=\"property-user f-12\">\r\n                  <Dogovor></Dogovor>\r\n                  Договор с &nbsp;\r\n                  {this.props.template.car.contractInfo.map(\r\n                    (item, index, items) => {\r\n                      let string = contractParams.find(\r\n                        (itemX) => itemX.id === item.id\r\n                      ).label;\r\n                      if (item.id === 3 || item.id === 2)\r\n                        string += \"(\" + item.org.value + \")\";\r\n                      return string + (items.length - 1 === index ? \".\" : \", \");\r\n                    }\r\n                  )}\r\n                </span>\r\n              )}\r\n\r\n            {this.props.template.car.paymentInfo &&\r\n              !!this.props.template.car.paymentInfo.length && (\r\n                <span className=\"property-user f-12\">\r\n                  <PayIco></PayIco>\r\n                  Оплата{\" \"}\r\n                  {this.props.template.car.paymentInfo.map(\r\n                    (item, index, items) => {\r\n                      return (\r\n                        paymentParams.find((itemX) => itemX.id === item.id)\r\n                          .label + (items.length - 1 === index ? \".\" : \",\")\r\n                      );\r\n                    }\r\n                  )}\r\n                </span>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarTemplate;\r\n","// App\r\nimport React from \"react\";\r\n\r\n// Elements\r\nimport Button from \"../../Elements/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport Loading from \"../../Elements/Loading\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from \"../../config/api\";\r\nimport CarTemplate from \"../../ArticlesElements/CarTemplate\";\r\n\r\nclass OfferCreate extends React.Component {\r\n  state = {\r\n    carTemplates: [],\r\n    isFetching: true,\r\n  };\r\n  componentDidMount() {\r\n    this.getCarTemplates();\r\n  }\r\n  getCarTemplates = () => {\r\n    this.setState({ isFetching: true }, () => {\r\n      fetch(`${api.urlApi}/api/car/getCarTemplates`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.props.user.apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.error) {\r\n            if (data.carTemplates) {\r\n              this.setState({\r\n                carTemplates: data.carTemplates,\r\n                isFetching: false,\r\n              });\r\n            }\r\n          }\r\n        });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"myauto-page\">\r\n          <div className=\"container-fluid\">\r\n            <h2\r\n              className=\"title\"\r\n              style={{\r\n                padding: \"0 28px 15px 28px\",\r\n                marginRight: \"-28px\",\r\n                marginLeft: \"-28px\",\r\n                borderBottom: \"1px solid #DDDDDD\",\r\n              }}\r\n            >\r\n              Мои шаблоны авто\r\n            </h2>\r\n\r\n            <div>\r\n              <Link to=\"/create-template-auto\">\r\n                <Button\r\n                  paddingVertical=\"11px\"\r\n                  className=\"f-14\"\r\n                  paddingVertical=\"10px\"\r\n                  type=\"fill\"\r\n                >\r\n                  Добавить шаблон авто\r\n                </Button>\r\n              </Link>\r\n              <div className=\"carTemplates-block\">\r\n                <Loading isLoading={this.state.isFetching}></Loading>\r\n                <CSSTransitionGroup\r\n                  transitionName=\"height-animation-item\"\r\n                  transitionEnterTimeout={500}\r\n                  transitionLeaveTimeout={1}\r\n                  style={{\r\n                    display: \"contents\",\r\n                  }}\r\n                >\r\n                  {this.state.carTemplates.map((item, index) => {\r\n                    return (\r\n                      <CarTemplate\r\n                        reload={this.getCarTemplates}\r\n                        user={this.props.user}\r\n                        template={item}\r\n                      />\r\n                    );\r\n                  })}\r\n                  {!this.state.carTemplates.length && (\r\n                    <div className=\"text-center\">\r\n                      Шаблоны авто еще не созданы\r\n                    </div>\r\n                  )}\r\n                </CSSTransitionGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OfferCreate);\r\n"],"sourceRoot":""}