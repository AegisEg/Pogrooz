{"version":3,"sources":["Elements/SettingsFiled.js","Pages/User/Notifications/NotificationsSettings.js"],"names":["SettingsFiled","className","this","props","label","CheckBox","id","keyField","name","text","onChange","valueMail","value","wrapperlabelClass","labelClass","valuePush","React","Component","settingsField","role","type","NotificationsSettings","state","settings","isFetching","isFetchingSave","saveSettings","setState","fetch","api","urlApi","method","headers","Accept","Authorization","user","apiToken","body","JSON","stringify","then","response","json","toast","success","Loading","isLoading","LoadingFixed","transitionName","transitionEnterTimeout","transitionLeaveTimeout","style","display","map","item","i","key","val","mail","push","Button","onClick","paddingVertical","fontSize","paddingHorizontal","connect"],"mappings":"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","file":"static/js/17.5a636379.chunk.js","sourcesContent":["// App\r\nimport React from \"react\";\r\nimport CheckBox from \"./CheckBox\";\r\n\r\nclass SettingsFiled extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row  align-items-center user-settings\">\r\n        <div className=\"filed-label\">{this.props.label}</div>\r\n        <div className=\"col fields-checkbox\">\r\n          <span className=\"align-middle\">\r\n            <CheckBox\r\n              id={`${this.props.keyField}-mail`}\r\n              name={`${this.props.keyField}-mail`}\r\n              text=\"На почту\"\r\n              onChange={() => {\r\n                this.props.onChange(\"mail\", !this.props.valueMail);\r\n              }}\r\n              value={this.props.valueMail || \"\"}\r\n              wrapperlabelClass=\"ml-2\"\r\n              labelClass=\"f-12 gray\"\r\n            />\r\n          </span>\r\n          <span className=\"align-middle\">\r\n            <CheckBox\r\n              id={`${this.props.keyField}-push`}\r\n              name={`${this.props.keyField}-push`}\r\n              text=\"Push-уведомления\"\r\n              onChange={() => {\r\n                this.props.onChange(\"push\", !this.props.valuePush);\r\n              }}\r\n              value={this.props.valuePush || \"\"}\r\n              wrapperlabelClass=\"ml-2\"\r\n              labelClass=\"f-12 gray\"\r\n            />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SettingsFiled;\r\n","// App\r\nimport React from \"react\";\r\nimport SettingsFiled from \"../../../Elements/SettingsFiled\";\r\nimport Button from \"../../../Elements/Button\";\r\nimport Loading from \"../../../Elements/Loading\";\r\nimport LoadingFixed from \"../../../Elements/LoadingFixed\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../../config/api\";\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nvar settingsField = [\r\n  {\r\n    label: \"Новая заявка\",\r\n    role: \"carrier\",\r\n    keyField: \"offer_new_request\",\r\n    type: \"offer\",\r\n  },\r\n  {\r\n    label: \"Вашу заявку подтвердили\",\r\n    role: \"cargo\",\r\n    keyField: \"offer_you_executor\",\r\n    type: \"offer\",\r\n  },\r\n  {\r\n    label: \"Смена статуса предложения\",\r\n    role: \"all\",\r\n    keyField: \"offer_status\",\r\n    type: \"offer\",\r\n  },\r\n  {\r\n    label: \"Новый отзыв\",\r\n    role: \"all\",\r\n    keyField: \"offer_new_review\",\r\n    type: \"offer\",\r\n  },\r\n  {\r\n    label: \"Сообщение по предложению\",\r\n    role: \"all\",\r\n    keyField: \"offer_new_message\",\r\n    type: \"offer\",\r\n  },\r\n  // {\r\n  //   label: \"Заказ в пути(отслеживание)\",\r\n  //   role: \"cargo\",\r\n  //   keyField: \"order_tracking\",\r\n  //   type: \"offer\",\r\n  // },\r\n  {\r\n    label: \"Новая заявка\",\r\n    role: \"cargo\",\r\n    keyField: \"order_new_request\",\r\n    type: \"order\",\r\n  },\r\n  {\r\n    label: \"Вас выбрали исполнителем\",\r\n    role: \"carrier\",\r\n    keyField: \"order_you_executor\",\r\n    type: \"order\",\r\n  },\r\n  {\r\n    label: \"Смена статуса заказа\",\r\n    role: \"all\",\r\n    keyField: \"order_status\",\r\n    type: \"order\",\r\n  },\r\n  {\r\n    label: \"Новый отзыв\",\r\n    role: \"all\",\r\n    keyField: \"order_new_review\",\r\n    type: \"order\",\r\n  },\r\n  {\r\n    label: \"Сообщение по заказу\",\r\n    role: \"all\",\r\n    keyField: \"order_new_message\",\r\n    type: \"order\",\r\n  },\r\n  // {\r\n  //   label: \"Заказ в пути(отслеживание)\",\r\n  //   role: \"cargo\",\r\n  //   keyField: \"order_tracking\",\r\n  //   type: \"order\",\r\n  // },\r\n  {\r\n    label: \"Новые сообщение пользователей\",\r\n    role: \"all\",\r\n    keyField: \"user_new_message\",\r\n    type: \"common\",\r\n  },\r\n  {\r\n    label: \"Модерация заказов\",\r\n    role: \"cargo\",\r\n    keyField: \"order_moderation\",\r\n    type: \"common\",\r\n  },\r\n  {\r\n    label: \"Модерация предложений\",\r\n    role: \"carrier\",\r\n    keyField: \"offer_moderation\",\r\n    type: \"common\",\r\n  },\r\n  {\r\n    label: \"Системные уведомления\",\r\n    role: \"all\",\r\n    keyField: \"system\",\r\n    type: \"common\",\r\n  },\r\n  {\r\n    label: \"Оповещения о остатке тарифа\",\r\n    role: \"carrier\",\r\n    keyField: \"tarif_ends\",\r\n    type: \"common2\",\r\n  },\r\n  {\r\n    label: \"Зачисление оплаты\",\r\n    role: \"carrier\",\r\n    keyField: \"tarif_payed\",\r\n    type: \"common2\",\r\n  },\r\n];\r\nclass NotificationsSettings extends React.Component {\r\n  state = {\r\n    settings: {},\r\n    isFetching: true,\r\n    isFetchingSave: false,\r\n  };\r\n  componentDidMount() {\r\n    fetch(`${api.urlApi}/api/user/getSettings`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then(({ settings }) => {\r\n        this.setState({ settings, isFetching: false });\r\n      });\r\n  }\r\n  saveSettings = () => {\r\n    this.setState({ isFetchingSave: true }, () => {\r\n      fetch(`${api.urlApi}/api/user/save-settings`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.props.user.apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          settings: this.state.settings,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({ settings }) => {\r\n          toast.success(\"Настройки сохранены\");\r\n          this.setState({ isFetchingSave: false });\r\n        });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h2 className=\"title\">Настроики уведомлений</h2>\r\n        <Loading isLoading={this.state.isFetching}></Loading>\r\n        <LoadingFixed isLoading={this.state.isFetchingSave}></LoadingFixed>\r\n        <CSSTransitionGroup\r\n          transitionName=\"erase-animation-item\"\r\n          transitionEnterTimeout={500}\r\n          transitionLeaveTimeout={1}\r\n          style={{\r\n            display: \"contents\",\r\n          }}\r\n        >\r\n          {!this.state.isFetching && (\r\n            <div className=\"settings-notification\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-sm-12 col-md-6\">\r\n                  <p className=\"setting-title\">По предложениям</p>\r\n                  {settingsField.map((item, i) => {\r\n                    if (\r\n                      item.type === \"offer\" &&\r\n                      (this.props.user.type === item.role ||\r\n                        item.role === \"all\")\r\n                    ) {\r\n                      return (\r\n                        <SettingsFiled\r\n                          key={i}\r\n                          label={item.label}\r\n                          onChange={(type, val) => {\r\n                            let settings = this.state.settings;\r\n                            if (!settings[item.keyField])\r\n                              settings[item.keyField] = {};\r\n                            settings[item.keyField][type] = val;\r\n                            this.setState({ settings });\r\n                          }}\r\n                          valueMail={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].mail\r\n                          }\r\n                          valuePush={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].push\r\n                          }\r\n                          keyField={item.keyField}\r\n                        />\r\n                      );\r\n                    } else return <></>;\r\n                  })}\r\n                </div>\r\n                <div className=\"col-12 col-sm-12 col-md-6\">\r\n                  <p className=\"setting-title\">По заказам</p>\r\n                  {settingsField.map((item, i) => {\r\n                    if (\r\n                      item.type === \"order\" &&\r\n                      (this.props.user.type === item.role ||\r\n                        item.role === \"all\")\r\n                    ) {\r\n                      return (\r\n                        <SettingsFiled\r\n                          key={i}\r\n                          label={item.label}\r\n                          onChange={(type, val) => {\r\n                            let settings = this.state.settings;\r\n                            if (!settings[item.keyField])\r\n                              settings[item.keyField] = {};\r\n                            settings[item.keyField][type] = val;\r\n                            this.setState({ settings });\r\n                          }}\r\n                          valueMail={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].mail\r\n                          }\r\n                          valuePush={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].push\r\n                          }\r\n                          keyField={item.keyField}\r\n                        />\r\n                      );\r\n                    } else return <></>;\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className=\"row common-settings\">\r\n                <div className=\"col-12 col-sm-12 col-md-6\">\r\n                  <p className=\"setting-title\">Общие</p>\r\n                  {settingsField.map((item, i) => {\r\n                    if (\r\n                      item.type === \"common\" &&\r\n                      (this.props.user.type === item.role ||\r\n                        item.role === \"all\")\r\n                    ) {\r\n                      return (\r\n                        <SettingsFiled\r\n                          key={i}\r\n                          label={item.label}\r\n                          onChange={(type, val) => {\r\n                            let settings = this.state.settings;\r\n                            if (!settings[item.keyField])\r\n                              settings[item.keyField] = {};\r\n                            settings[item.keyField][type] = val;\r\n                            this.setState({ settings });\r\n                          }}\r\n                          valueMail={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].mail\r\n                          }\r\n                          valuePush={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].push\r\n                          }\r\n                          keyField={item.keyField}\r\n                        />\r\n                      );\r\n                    } else return <></>;\r\n                  })}\r\n                </div>\r\n                <div className=\"col-12 col-sm-12 col-md-6\">\r\n                  <p className=\"setting-title\"></p>\r\n                  {settingsField.map((item, i) => {\r\n                    if (\r\n                      item.type === \"common2\" &&\r\n                      (this.props.user.type === item.role ||\r\n                        item.role === \"all\")\r\n                    ) {\r\n                      return (\r\n                        <SettingsFiled\r\n                          key={i}\r\n                          label={item.label}\r\n                          onChange={(type, val) => {\r\n                            let settings = this.state.settings;\r\n                            if (!settings[item.keyField])\r\n                              settings[item.keyField] = {};\r\n                            settings[item.keyField][type] = val;\r\n                            this.setState({ settings });\r\n                          }}\r\n                          valueMail={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].mail\r\n                          }\r\n                          valuePush={\r\n                            this.state.settings[item.keyField] &&\r\n                            this.state.settings[item.keyField].push\r\n                          }\r\n                          keyField={item.keyField}\r\n                        />\r\n                      );\r\n                    } else return <></>;\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <Button\r\n                  onClick={this.saveSettings}\r\n                  type=\"fill\"\r\n                  className=\"mb-4\"\r\n                  paddingVertical={\"8px\"}\r\n                  fontSize={\"17px\"}\r\n                  paddingHorizontal={\"35px\"}\r\n                >\r\n                  Сохранить все\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CSSTransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NotificationsSettings);\r\n"],"sourceRoot":""}