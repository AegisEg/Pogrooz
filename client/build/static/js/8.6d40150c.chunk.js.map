{"version":3,"sources":["controllers/FunctionsController.js","redux/actions/dialogs.js","Pages/User/Messages/Messages.js"],"names":["randomInteger","min","max","rand","Math","random","floor","padZero","v","one","parseInt","two","renderCanvas","ref","id","RecordLine","isAdaptive","color","canvas","document","getElementById","ctxCanvas","getContext","width","getBoundingClientRect","height","clearRect","fillStyle","strokeStyle","slice","reverse","map","item","index","beginPath","roundedRect","length","stroke","getAudioBufferData","blobUrl","data","actx","window","AudioContext","webkitAudioContext","Promise","resolve","reject","fetch","mode","then","resp","arrayBuffer","decodeAudioData","bind","buffer","duration","i","channel","getChannelData","points","x","abs","dB","push","recordLine","pos","winSize","rms","sum","sqrt","log10","String","prototype","toTimer","sec_num","this","hours","minutes","seconds","toHHMMSS","CanvasRenderingContext2D","y","radius","save","translate","moveTo","arcTo","lineTo","restore","dialogsAllGet","apiToken","dispatch","api","urlApi","method","headers","Accept","Authorization","response","json","existDialog","store","getState","dialogs","dialogsUser","find","_id","messages","isGetted","canLoad","user","users","typers","type","DIALOGSALL_GET","payload","dialogsGet","DIALOGS_GET","dialogGet","userId","body","JSON","stringify","dialog","error","isNotFound","DIALOGS_ADD","typing","lastMessage","isLoading","dialogsLoad","DIALOGSALL_SET_LOADING","dialogsALL","DIALOGSORDER_SET_LOADING","dialogsOrder","DIALOGS_SET_LOADING","lastDialogId","DIALOGSORDER_LOAD","DIALOGS_LOAD","DIALOGSALL_LOAD","dialogLoad","DIALOG_LOAD","dialogId","updateOnline","isOrder","DIALOGSORDER_UPDATE_ONLINE","DIALOGS_UPDATE_ONLINE","online","onlineAt","retrySendMessage","message","typeDelete","DIALOGSORDER_DELETE_MESSAGE","DIALOGS_DELETE_MESSAGE","typeAdd","DIALOGSORDER_ADD_MESSAGE","DIALOGS_ADD_MESSAGE","typeError","DIALOGSORDER_ERROR_MESSAGE","DIALOGS_ERROR_MESSAGE","typeSuccessMessage","DIALOGSORDER_SUCCESS_MESSAGE","DIALOGS_SUCCESS_MESSAGE","formData","FormData","voiceSound","append","file","images","files","sounds","localMessage","text","isError","recentMessage","createdAt","Date","now","messageIds","socketId","SocketController","getSocketId","recentMessages","messageRes","_newId","catch","deleteLocalMessage","filter","pop","sendMessage","isRead","errors","msg","toast","position","POSITION","TOP_CENTER","readMessages","otherId","typeRead","DIALOGSORDER_READ_MESSAGES","DIALOGS_READ_MESSAGES","setTimeout","noRead","noReadCount","loadMessages","typeLoad","DIALOGSORDER_LOAD_MESSAGES","DIALOGS_LOAD_MESSAGES","typeSetLoad","DIALOGORDER_SET_LOADING","DIALOG_SET_LOADING","lastMessageId","dialogsOrderGet","DIALOGSORDER_GET","dialogOrderGet","orderId","DIALOGSORDER_ADD","dialogOrderLoad","DIALOGORDER_LOAD","Dialog","props","className","articleId","from","city_with_type","style","whiteSpace","maxWidth","avatar","name","last","first","LastMessageDate","voiseSound","sound","to","React","Component","Messages","tab","dialogsActions","onScroll","isFetching","dialogsBlock","getScrollHeight","getScrollTop","getClientHeight","console","log","transitionName","transitionEnterTimeout","transitionLeaveTimeout","display","renderTrackVertical","renderThumbVertical","autoHide","key","connect","state","bindActionCreators"],"mappings":"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","file":"static/js/8.6d40150c.chunk.js","sourcesContent":["String.prototype.toTimer = function () {\r\n  var sec_num = parseInt(this, 10); // don't forget the second param\r\n  var hours = Math.floor(sec_num / 3600);\r\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n  var seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n  if (minutes < 10) {\r\n    minutes = \"0\" + minutes;\r\n  }\r\n  if (seconds < 10) {\r\n    seconds = \"0\" + seconds;\r\n  }\r\n  return minutes + \":\" + seconds;\r\n};\r\nString.prototype.toHHMMSS = function () {\r\n  var sec_num = parseInt(this, 10); // don't forget the second param\r\n  var hours = Math.floor(sec_num / 3600);\r\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n  var seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n  if (hours < 10) {\r\n    hours = \"0\" + hours;\r\n  }\r\n  if (minutes < 10) {\r\n    minutes = \"0\" + minutes;\r\n  }\r\n  if (seconds < 10) {\r\n    seconds = \"0\" + seconds;\r\n  }\r\n  return hours + minutes + \":\" + seconds;\r\n};\r\nexport function randomInteger(min, max) {\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\nexport function padZero(v) {\r\n  let one = parseInt(v / 60),\r\n    two = parseInt(v % 60);\r\n  return (one < 10 ? \"0\" + one : one) + \":\" + (two % 60 < 10 ? \"0\" + two : two);\r\n}\r\nCanvasRenderingContext2D.prototype.roundedRect = function (\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius\r\n) {\r\n  // Because the function is added to the context prototype\r\n  // the 'this' variable is actually the context\r\n\r\n  // Save the existing state of the canvas so that it can be restored later\r\n  this.save();\r\n\r\n  // Translate to the given X/Y coordinates\r\n  this.translate(x, y);\r\n\r\n  // Move to the center of the top horizontal line\r\n  this.moveTo(width / 2, 0);\r\n\r\n  // Draw the rounded corners. The connecting lines in between them are drawn automatically\r\n  this.arcTo(width, 0, width, height, Math.min(height / 2, radius));\r\n  this.arcTo(width, height, 0, height, Math.min(width / 2, radius));\r\n  this.arcTo(0, height, 0, 0, Math.min(height / 2, radius));\r\n  this.arcTo(0, 0, radius, 0, Math.min(width / 2, radius));\r\n\r\n  // Draw a line back to the start coordinates\r\n  this.lineTo(width / 2, 0);\r\n\r\n  // Restore the state of the canvas to as it was before the save\r\n  this.restore();\r\n};\r\nexport function renderCanvas(ref, id, RecordLine, isAdaptive, color) {\r\n  let canvas;\r\n  let paddingStick = 3,\r\n    widthStick = 1; //Ширина полосок\r\n  if (!!ref) canvas = ref;\r\n  else canvas = document.getElementById(id);\r\n  if (canvas) {\r\n    let ctxCanvas = canvas.getContext(\"2d\");\r\n    canvas.width = canvas.getBoundingClientRect().width - 88; //Ширина минус паддинги\r\n    canvas.height = canvas.getBoundingClientRect().height;\r\n    ctxCanvas.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctxCanvas.fillStyle = color;\r\n    ctxCanvas.strokeStyle = color;\r\n    RecordLine.slice().reverse();\r\n    RecordLine.map((item, index) => {\r\n      let height = item / 180;\r\n      if (height > 1) height = canvas.height - 9;\r\n      else if (height === 0) height = 2;\r\n      else height = (canvas.height - 9) * height;\r\n      ctxCanvas.beginPath();\r\n      ctxCanvas.roundedRect(\r\n        canvas.width -\r\n          (RecordLine.length - index) * (paddingStick + widthStick),\r\n        canvas.height / 2 - height / 2,\r\n        widthStick,\r\n        height,\r\n        1\r\n      );\r\n      ctxCanvas.stroke();\r\n    });\r\n  }\r\n}\r\nexport function getAudioBufferData(blobUrl) {\r\n  let data = {};\r\n  let actx = new (window.AudioContext || window.webkitAudioContext)();\r\n  return new Promise((resolve, reject) => {\r\n    fetch(blobUrl, { mode: \"cors\" })\r\n      .then(function (resp) {\r\n        return resp.arrayBuffer();\r\n      })\r\n      .then(actx.decodeAudioData.bind(actx))\r\n      .then(function (buffer) {\r\n        data.duration = buffer.duration;\r\n        var channel = buffer.getChannelData(0);\r\n        var points = [0];\r\n        for (var x = 1, i, v; x < 300; x++) {\r\n          i = ((x / 300) * channel.length) | 0;\r\n          v = Math.abs(dB(channel, i, 8820)) / 40;\r\n          points.push(v * 100);\r\n        }\r\n        data.recordLine = points;\r\n        resolve(data);\r\n      });\r\n  });\r\n}\r\nfunction dB(buffer, pos, winSize) {\r\n  for (var rms, sum = 0, v, i = pos - winSize; i <= pos; i++) {\r\n    v = i < 0 ? 0 : buffer[i];\r\n    sum += v * v;\r\n  }\r\n  rms = Math.sqrt(sum / winSize); // corrected!\r\n  return 20 * Math.log10(rms);\r\n}\r\n","import {\r\n  DIALOGSALL_GET,\r\n  DIALOGSALL_LOAD,\r\n  DIALOGSALL_SET_LOADING,\r\n  DIALOGSORDER_SET_LOADING,\r\n  DIALOGS_SET_LOADING,\r\n  //DIALOGUSER\r\n  DIALOGS_LOAD,\r\n  DIALOGS_GET,\r\n  DIALOGS_ADD,\r\n  DIALOGS_ADD_MESSAGE,\r\n  DIALOGS_SUCCESS_MESSAGE,\r\n  DIALOGS_ERROR_MESSAGE,\r\n  DIALOGS_READ_MESSAGES,\r\n  DIALOG_LOAD,\r\n  DIALOGS_DELETE_MESSAGE,\r\n  DIALOG_SET_LOADING,\r\n  DIALOGS_LOAD_MESSAGES,\r\n  DIALOGS_UPDATE_ONLINE,\r\n  //DIALOGORDER\r\n  DIALOGSORDER_LOAD,\r\n  DIALOGSORDER_GET,\r\n  DIALOGSORDER_ADD,\r\n  DIALOGSORDER_ADD_MESSAGE,\r\n  DIALOGSORDER_SUCCESS_MESSAGE,\r\n  DIALOGSORDER_ERROR_MESSAGE,\r\n  DIALOGSORDER_READ_MESSAGES,\r\n  DIALOGORDER_LOAD,\r\n  DIALOGSORDER_DELETE_MESSAGE,\r\n  DIALOGORDER_SET_LOADING,\r\n  DIALOGSORDER_LOAD_MESSAGES,\r\n  DIALOGSORDER_UPDATE_ONLINE,\r\n} from \"../constants\";\r\nimport store from \"../store\";\r\nimport { randomInteger } from \"../../controllers/FunctionsController\";\r\nimport SocketController from \"../../controllers/SocketController\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../config/api\";\r\n\r\n//DIALOGALL\r\nexport const dialogsAllGet = (apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/dialogsOrder/getAllDialog`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        for (let i = 0; i < data.dialogs.length; i++) {\r\n          let existDialog = store\r\n            .getState()\r\n            .dialogs.dialogsUser.dialogs.find(\r\n              (x) => x._id === data.dialogs[i]._id\r\n            );\r\n\r\n          if (existDialog) {\r\n            data.dialogs[i].messages = existDialog.messages;\r\n          }\r\n          data.dialogs[i].isGetted = false;\r\n          data.dialogs[i].canLoad = true;\r\n          data.dialogs[i].user = data.dialogs[i].users.find(\r\n            (user) => user._id !== store.getState().user._id\r\n          );\r\n\r\n          if (!data.dialogs[i].user)\r\n            data.dialogs[i].user = data.dialogs[i].users[0];\r\n\r\n          data.dialogs[i].typers = [];\r\n        }\r\n        dispatch({\r\n          type: DIALOGSALL_GET,\r\n          payload: data,\r\n        });\r\n        resolve();\r\n      });\r\n  });\r\n};\r\n//DIALOGSUSER\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/dialog/get-all`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        for (let i = 0; i < data.dialogs.length; i++) {\r\n          let existDialog = store\r\n            .getState()\r\n            .dialogs.dialogsUser.dialogs.find(\r\n              (x) => x._id === data.dialogs[i]._id\r\n            );\r\n\r\n          if (existDialog) {\r\n            data.dialogs[i].messages = existDialog.messages;\r\n          }\r\n          data.dialogs[i].isGetted = false;\r\n          data.dialogs[i].canLoad = true;\r\n\r\n          data.dialogs[i].user = data.dialogs[i].users.find(\r\n            (user) => user._id !== store.getState().user._id\r\n          );\r\n\r\n          if (!data.dialogs[i].user)\r\n            data.dialogs[i].user = data.dialogs[i].users[0];\r\n\r\n          data.dialogs[i].typers = [];\r\n        }\r\n        dispatch({\r\n          type: DIALOGS_GET,\r\n          payload: data,\r\n        });\r\n        resolve();\r\n      });\r\n  });\r\n};\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/dialog/get`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        userId,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(({ dialog, messages }) => {\r\n        if (!dialog.error) {\r\n          dialog.user = dialog.users.find(\r\n            (user) => user._id !== store.getState().user._id\r\n          );\r\n          if (!dialog.user) dialog.user = dialog.users[0];\r\n\r\n          dialog.typing = false;\r\n\r\n          dialog.isGetted = true;\r\n          dialog.messages = messages.reverse();\r\n          dialog.lastMessage = false;\r\n          dialog.canLoad = messages.length === 50;\r\n          dialog.isLoading = false;\r\n\r\n          dispatch({\r\n            type: DIALOGS_ADD,\r\n            payload: { dialog },\r\n          });\r\n          resolve();\r\n        } else {\r\n          let dialog = {\r\n            isGetted: true,\r\n            isNotFound: true,\r\n            user: { _id: userId },\r\n          };\r\n\r\n          dispatch({\r\n            type: DIALOGS_ADD,\r\n            payload: dialog,\r\n          });\r\n          resolve();\r\n        }\r\n      });\r\n  });\r\n};\r\nexport const dialogsLoad = (type, apiToken) => (dispatch) => {\r\n  let dialogs;\r\n  switch (type) {\r\n    case \"all\":\r\n      dispatch({ type: DIALOGSALL_SET_LOADING });\r\n      dialogs = store.getState().dialogs.dialogsALL;\r\n      break;\r\n    case \"order\":\r\n      dispatch({ type: DIALOGSORDER_SET_LOADING });\r\n      dialogs = store.getState().dialogs.dialogsOrder;\r\n      break;\r\n    case \"user\":\r\n      dispatch({ type: DIALOGS_SET_LOADING });\r\n      dialogs = store.getState().dialogs.dialogsUser;\r\n      break;\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/dialog/load`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        type,\r\n        lastDialogId: dialogs.dialogs[dialogs.dialogs.length - 1]._id,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(({ dialogs }) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n          dialogs[i].isGetted = false;\r\n          dialogs[i].canLoad = true;\r\n          dialogs[i].user = dialogs[i].users.find(\r\n            (user) => user._id !== store.getState().user._id\r\n          );\r\n\r\n          if (!dialogs[i].user) dialogs[i].user = dialogs[i].users[0];\r\n\r\n          dialogs[i].typers = [];\r\n        }\r\n        if (type === \"order\")\r\n          dispatch({\r\n            type: DIALOGSORDER_LOAD,\r\n            payload: { dialogs },\r\n          });\r\n        else if (type === \"user\")\r\n          dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: { dialogs },\r\n          });\r\n        else if (type === \"all\")\r\n          dispatch({\r\n            type: DIALOGSALL_LOAD,\r\n            payload: { dialogs },\r\n          });\r\n        resolve();\r\n      });\r\n  });\r\n};\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/dialog/get`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        userId,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(({ dialog, messages }) => {\r\n        dialog.messages = messages.reverse();\r\n\r\n        dispatch({\r\n          type: DIALOG_LOAD,\r\n          payload: {\r\n            dialogId: dialog._id,\r\n            messages: dialog.messages,\r\n            canLoad: messages.length === 50,\r\n          },\r\n        });\r\n        resolve();\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateOnline = (userId, apiToken, isOrder) => (dispatch) => {\r\n  let type = isOrder ? DIALOGSORDER_UPDATE_ONLINE : DIALOGS_UPDATE_ONLINE;\r\n  fetch(`${api.urlApi}/api/user/get-online`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${apiToken}`,\r\n    },\r\n    body: JSON.stringify({\r\n      userId,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(({ online, onlineAt }) => {\r\n      dispatch({\r\n        type: type,\r\n        payload: { userId, online, onlineAt },\r\n      });\r\n    });\r\n};\r\nexport const retrySendMessage = (message, apiToken, isOrder) => (dispatch) => {\r\n  let typeDelete = isOrder\r\n    ? DIALOGSORDER_DELETE_MESSAGE\r\n    : DIALOGS_DELETE_MESSAGE;\r\n  let typeAdd = isOrder ? DIALOGSORDER_ADD_MESSAGE : DIALOGS_ADD_MESSAGE;\r\n  let typeError = isOrder ? DIALOGSORDER_ERROR_MESSAGE : DIALOGS_ERROR_MESSAGE;\r\n  let typeSuccessMessage = isOrder\r\n    ? DIALOGSORDER_SUCCESS_MESSAGE\r\n    : DIALOGS_SUCCESS_MESSAGE;\r\n  let dialogId = message.dialogId;\r\n  let formData = new FormData();\r\n  let voiceSound = false;\r\n  if (message.voiceSound) {\r\n    formData.append(\"voiceSound\", message.voiceSound.file);\r\n    formData.append(\"voiceSoundDuration\", message.voiceSound.duration);\r\n    formData.append(\"voiceSoundRecordLine\", message.voiceSound.recordLine);\r\n    voiceSound = message.voiceSound;\r\n  }\r\n  formData.append(\"images\", JSON.stringify(message.images));\r\n  formData.append(\"files\", JSON.stringify(message.files));\r\n  formData.append(\"sounds\", JSON.stringify(message.sounds));\r\n  let localMessage = {\r\n    _id: message._id,\r\n    user: store.getState().user,\r\n    text: message.text,\r\n    images: message.images,\r\n    sounds: message.sounds,\r\n    files: message.files,\r\n    voiceSound: voiceSound,\r\n    isLoading: true,\r\n    isError: false,\r\n    recentMessage: message.recentMessage,\r\n    createdAt: Date.now(),\r\n    type: \"message\",\r\n  };\r\n  dispatch({\r\n    type: typeDelete,\r\n    payload: { dialogId, messageIds: [message._id], lastMessage: false },\r\n  });\r\n\r\n  dispatch({\r\n    type: typeAdd,\r\n    payload: { message: localMessage, dialogId: message.dialogId },\r\n  });\r\n\r\n  message.socketId = SocketController.getSocketId();\r\n  formData.append(\"text\", message.text);\r\n  formData.append(\"recentMessages\", message.recentMessages);\r\n  formData.append(\"userId\", message.userId);\r\n  formData.append(\"dialog\", message.dialogId);\r\n  formData.append(\"socketId\", SocketController.getSocketId());\r\n\r\n  fetch(`${api.urlApi}/api/dialog/send-message`, {\r\n    method: \"post\",\r\n    headers: {\r\n      // 'Accept': 'application/json',\r\n      // 'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${apiToken}`,\r\n    },\r\n    body: formData,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((messageRes) => {\r\n      if (messageRes.error) {\r\n        return dispatch({\r\n          type: typeError,\r\n          payload: {\r\n            _id: message._id,\r\n            dialogId: message.dialogId,\r\n            voiceSound: message.voiceSound,\r\n          },\r\n        });\r\n      }\r\n      dispatch({\r\n        type: typeSuccessMessage,\r\n        payload: {\r\n          _id: message._id,\r\n          _newId: messageRes._id,\r\n          dialogId: message.dialogId,\r\n        },\r\n      });\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: typeError,\r\n        payload: { _id: message._id, dialogId: message.dialogId },\r\n      });\r\n    });\r\n};\r\nexport const deleteLocalMessage = (_id, dialogId, isOrder) => (dispatch) => {\r\n  let messageIds = [_id];\r\n  let dialogs = isOrder\r\n    ? store.getState().dialogs.dialogsOrder\r\n    : store.getState().dialogs.dialogsUser;\r\n  let lastMessage;\r\n  if (\r\n    dialogs.dialogs.find((x) => x._id === dialogId) &&\r\n    !!dialogs.dialogs.find((x) => x._id === dialogId).messages.length\r\n  )\r\n    lastMessage = dialogs.dialogs\r\n      .find((x) => x._id === dialogId)\r\n      .messages.filter((x) => !messageIds.find((y) => y === x._id))\r\n      .pop();\r\n  else lastMessage = false;\r\n\r\n  dispatch({\r\n    type: DIALOGS_DELETE_MESSAGE,\r\n    payload: { dialogId, messageIds, lastMessage },\r\n  });\r\n};\r\nexport const sendMessage = (message, apiToken, isOrder) => (dispatch) => {\r\n  let typeAdd = isOrder ? DIALOGSORDER_ADD_MESSAGE : DIALOGS_ADD_MESSAGE;\r\n  let typeError = isOrder ? DIALOGSORDER_ERROR_MESSAGE : DIALOGS_ERROR_MESSAGE;\r\n  let typeSuccessMessage = isOrder\r\n    ? DIALOGSORDER_SUCCESS_MESSAGE\r\n    : DIALOGS_SUCCESS_MESSAGE;\r\n\r\n  let formData = new FormData();\r\n  let _id = randomInteger(0, 1000000);\r\n  let images = [];\r\n  let files = [];\r\n  let sounds = [];\r\n  let voiceSound = false;\r\n\r\n  formData.append(\"images\", JSON.stringify(message.images));\r\n  formData.append(\"files\", JSON.stringify(message.files));\r\n  formData.append(\"sounds\", JSON.stringify(message.sounds));\r\n  if (message.voiceSound) {\r\n    formData.append(\"voiceSound\", message.voiceSound.file);\r\n    formData.append(\"voiceSoundDuration\", message.voiceSound.duration);\r\n    formData.append(\"voiceSoundRecordLine\", message.voiceSound.recordLine);\r\n    voiceSound = message.voiceSound;\r\n  }\r\n  let localMessage = {\r\n    _id,\r\n    user: store.getState().user,\r\n    text: message.text,\r\n    images: message.images,\r\n    sounds: message.sounds,\r\n    files: message.files,\r\n    voiceSound: voiceSound,\r\n    isLoading: true,\r\n    isError: false,\r\n    isRead: false,\r\n    recentMessage: message.recentMessage,\r\n    createdAt: Date.now(),\r\n    type: \"message\",\r\n  };\r\n  dispatch({\r\n    type: typeAdd,\r\n    payload: { message: localMessage, dialogId: message.dialogId },\r\n  });\r\n\r\n  message.socketId = SocketController.getSocketId();\r\n\r\n  formData.append(\"text\", message.text);\r\n  formData.append(\"recentMessage\", message.recentMessage._id);\r\n  formData.append(\"dialog\", message.dialogId);\r\n  formData.append(\"userId\", message.userId);\r\n  formData.append(\"socketId\", SocketController.getSocketId());\r\n  fetch(`${api.urlApi}/api/dialog/send-message`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Authorization: `Bearer ${apiToken}`,\r\n    },\r\n    body: formData,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((messageRes) => {\r\n      if (messageRes.error) {\r\n        if (messageRes.errors[0].msg === \"max_size\") {\r\n          toast.error(\"Max file size upload 10 Mb.\", {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        }\r\n\r\n        return dispatch({\r\n          type: typeError,\r\n          payload: { _id, dialogId: message.dialogId },\r\n        });\r\n      }\r\n      dispatch({\r\n        type: typeSuccessMessage,\r\n        payload: {\r\n          _id,\r\n          _newId: messageRes._id,\r\n          dialogId: message.dialogId,\r\n          voiceSound: message.voiceSound,\r\n        },\r\n      });\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: typeError,\r\n        payload: { _id, dialogId: message.dialogId },\r\n      });\r\n    });\r\n};\r\nexport const readMessages = (\r\n  { dialogId, userId, otherId },\r\n  apiToken,\r\n  isOrder\r\n) => (dispatch) => {\r\n  let typeRead = isOrder ? DIALOGSORDER_READ_MESSAGES : DIALOGS_READ_MESSAGES;\r\n  let dialogs = isOrder\r\n    ? store.getState().dialogs.dialogsOrder\r\n    : store.getState().dialogs.dialogsUser;\r\n  let readMessages = dialogs.dialogs\r\n    .find((dialog) => dialog._id === dialogId)\r\n    .messages.filter((x) => !x.isRead && x.user._id !== userId);\r\n\r\n  setTimeout(() => {\r\n    if (!!readMessages.length) {\r\n      dispatch({\r\n        type: typeRead,\r\n        payload: { dialogId, userId: otherId, noRead: true, noReadCount: true },\r\n      });\r\n    }\r\n  }, 1);\r\n\r\n  if (!!readMessages.length) {\r\n    fetch(`${api.urlApi}/api/dialog/read-messages`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        dialogId,\r\n        otherId,\r\n        socketId: SocketController.getSocketId(),\r\n      }),\r\n    })\r\n      .then()\r\n      .catch(() => {});\r\n  }\r\n};\r\n\r\nexport const loadMessages = ({ dialogId }, apiToken, isOrder) => (dispatch) => {\r\n  let typeLoad = isOrder ? DIALOGSORDER_LOAD_MESSAGES : DIALOGS_LOAD_MESSAGES;\r\n  let typeSetLoad = isOrder ? DIALOGORDER_SET_LOADING : DIALOG_SET_LOADING;\r\n  let dialogs = isOrder\r\n    ? store.getState().dialogs.dialogsOrder\r\n    : store.getState().dialogs.dialogsUser;\r\n  return new Promise((resolve, reject) => {\r\n    let lastMessage = dialogs.dialogs.find((x) => x._id === dialogId)\r\n      .messages[0];\r\n    dispatch({\r\n      type: typeSetLoad,\r\n      payload: dialogId,\r\n    });\r\n\r\n    fetch(`${api.urlApi}/api/dialog/load-messages`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        dialogId,\r\n        lastMessageId: lastMessage._id,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((messages) => {\r\n        dispatch({\r\n          type: typeLoad,\r\n          payload: {\r\n            dialogId,\r\n            messages: messages.reverse(),\r\n            canLoad: messages.length === 50,\r\n          },\r\n        });\r\n        resolve();\r\n      })\r\n      .catch(() => {});\r\n  });\r\n};\r\n\r\n//DIALOGSORDER\r\nexport const dialogsOrderGet = (apiToken) => (dispatch) => {\r\n  fetch(`${api.urlApi}/api/dialogsOrder/get-all`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${apiToken}`,\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      for (let i = 0; i < data.dialogs.length; i++) {\r\n        let existDialog = store\r\n          .getState()\r\n          .dialogs.dialogsOrder.dialogs.find(\r\n            (x) => x._id === data.dialogs[i]._id\r\n          );\r\n\r\n        if (existDialog) {\r\n          data.dialogs[i].messages = existDialog.messages;\r\n        }\r\n        data.dialogs[i].isGetted = false;\r\n        data.dialogs[i].canLoad = true;\r\n        data.dialogs[i].user = data.dialogs[i].users.find(\r\n          (user) => user._id !== store.getState().user._id\r\n        );\r\n\r\n        if (!data.dialogs[i].user)\r\n          data.dialogs[i].user = data.dialogs[i].users[0];\r\n\r\n        data.dialogs[i].typers = [];\r\n      }\r\n      dispatch({\r\n        type: DIALOGSORDER_GET,\r\n        payload: data,\r\n      });\r\n    });\r\n};\r\n\r\nexport const dialogOrderGet = (userId, orderId, apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(`${api.urlApi}/api/dialogsOrder/get`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${apiToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        userId,\r\n        orderId,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(({ dialog, messages }) => {\r\n        if (!dialog.error) {\r\n          dialog.user = dialog.users.find(\r\n            (user) => user._id !== store.getState().user._id\r\n          );\r\n          if (!dialog.user) dialog.user = dialog.users[0];\r\n\r\n          dialog.typing = false;\r\n\r\n          dialog.isGetted = true;\r\n          dialog.messages = messages.reverse();\r\n          dialog.lastMessage = false;\r\n          dialog.canLoad = messages.length === 50;\r\n          dialog.isLoading = false;\r\n\r\n          dispatch({\r\n            type: DIALOGSORDER_ADD,\r\n            payload: { dialog },\r\n          });\r\n          resolve();\r\n        } else {\r\n          let dialog = {\r\n            isGetted: true,\r\n            isNotFound: true,\r\n            user: { _id: userId },\r\n          };\r\n          dispatch({\r\n            type: DIALOGSORDER_ADD,\r\n            payload: {dialog},\r\n          });\r\n          resolve();\r\n        }\r\n      });\r\n  });\r\n};\r\n\r\nexport const dialogOrderLoad = (userId, orderId, apiToken) => (dispatch) => {\r\n  fetch(`${api.urlApi}/api/dialogsOrder/get`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${apiToken}`,\r\n    },\r\n    body: JSON.stringify({\r\n      userId,\r\n      orderId,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(({ dialog, messages }) => {\r\n      dialog.messages = messages.reverse();\r\n\r\n      dispatch({\r\n        type: DIALOGORDER_LOAD,\r\n        payload: {\r\n          dialogId: dialog._id,\r\n          messages: dialog.messages,\r\n          canLoad: messages.length === 50,\r\n        },\r\n      });\r\n    });\r\n};\r\n","// App\r\nimport React from \"react\";\r\nimport { LastMessageDate } from \"../../../controllers/TimeController\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as dialogsActions from \"../../../redux/actions/dialogs\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Avatar from \"../../../Elements/Avatar\";\r\nimport Loading from \"../../../Elements/Loading\";\r\nimport LoadingFixed from \"../../../Elements/LoadingFixed\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nclass Dialog extends React.Component {\r\n  render() {\r\n    if (!!this.props.dialog.orderId)\r\n      return (\r\n        <div\r\n          className={`dialog  ${\r\n            this.props.dialog.lastMessage.user._id === this.props.user._id\r\n              ? \"your\"\r\n              : \"other\"\r\n          } ${!this.props.dialog.lastMessage.isRead ? \"unread\" : \"\"}`}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm with-article\">\r\n              <div className=\"f-14\">\r\n                заказ №{this.props.dialog.orderId.articleId}\r\n              </div>\r\n              <div className=\"f-12\">\r\n                {this.props.dialog.orderId.from.data.city_with_type}\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"pl-3 pr-1 f-14 d-flex\"\r\n              style={{\r\n                whiteSpace: \"pre-line\",\r\n                maxWidth: \"90px\",\r\n              }}\r\n            >\r\n              <Avatar avatar={this.props.dialog.user.avatar} />\r\n            </div>\r\n            <div className=\"col f-14 dialog-content\">\r\n              <div className=\"head\">\r\n                <div className=\"f-14 dialog-user-name\">\r\n                  {this.props.dialog.user.name.last}{\" \"}\r\n                  {this.props.dialog.user.name.first}\r\n                </div>\r\n                <div\r\n                  className=\"f-14\"\r\n                  style={{\r\n                    color: \"#6C6C6C\",\r\n                  }}\r\n                >\r\n                  {LastMessageDate(this.props.dialog.lastMessage.createdAt)}\r\n                </div>\r\n              </div>\r\n              <div className=\"last-message\">\r\n                {!this.props.dialog.typing &&\r\n                  this.props.dialog.lastMessage.user._id ===\r\n                    this.props.user._id && <> Вы:&nbsp;</>}\r\n                {!this.props.dialog.typing && (\r\n                  <>{this.props.dialog.lastMessage.text}</>\r\n                )}\r\n                {!this.props.dialog.typing &&\r\n                  !!!this.props.dialog.lastMessage.text &&\r\n                  (this.props.dialog.lastMessage.voiseSound ||\r\n                    this.props.dialog.lastMessage.sound ||\r\n                    this.props.dialog.lastMessage.images ||\r\n                    this.props.dialog.lastMessage.files) && <>Вложения</>}\r\n                {this.props.dialog.typing && (\r\n                  <div className=\"reading-status\">печатает</div>\r\n                )}\r\n                {this.props.dialog.lastMessage.user._id !==\r\n                  this.props.user._id &&\r\n                  !!this.props.dialog.noRead && (\r\n                    <span className=\"counter\">{this.props.dialog.noRead}</span>\r\n                  )}\r\n                <Link\r\n                  className=\"sharected-link\"\r\n                  to={`/dialog-order/${this.props.dialog.orderId._id}/${this.props.dialog.user._id}`}\r\n                ></Link>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n      );\r\n    if (!this.props.dialog.orderId)\r\n      return (\r\n        <div\r\n          className={`dialog  ${\r\n            this.props.dialog.lastMessage.user._id === this.props.user._id\r\n              ? \"your\"\r\n              : \"other\"\r\n          } ${!this.props.dialog.lastMessage.isRead ? \"unread\" : \"\"}`}\r\n        >\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"pl-3 pr-1 f-14 d-flex\"\r\n              style={{\r\n                whiteSpace: \"pre-line\",\r\n                maxWidth: \"90px\",\r\n              }}\r\n            >\r\n              <Avatar avatar={this.props.dialog.user.avatar} />\r\n            </div>\r\n            <div className=\"col f-14 dialog-content\">\r\n              <div className=\"head\">\r\n                <div className=\"f-14 dialog-user-name\">\r\n                  {this.props.dialog.user.name.last}{\" \"}\r\n                  {this.props.dialog.user.name.first}\r\n                </div>\r\n                <div\r\n                  className=\"f-14\"\r\n                  style={{\r\n                    color: \"#6C6C6C\",\r\n                  }}\r\n                >\r\n                  {LastMessageDate(this.props.dialog.lastMessage.createdAt)}\r\n                </div>\r\n              </div>\r\n              <div className=\"last-message\">\r\n                {!this.props.dialog.typing &&\r\n                  this.props.dialog.lastMessage.user._id ===\r\n                    this.props.user._id && <> Вы:&nbsp;</>}\r\n                {!this.props.dialog.typing && (\r\n                  <>{this.props.dialog.lastMessage.text}</>\r\n                )}\r\n                {!this.props.dialog.typing &&\r\n                  !!!this.props.dialog.lastMessage.text &&\r\n                  (this.props.dialog.lastMessage.voiseSound ||\r\n                    this.props.dialog.lastMessage.sound ||\r\n                    this.props.dialog.lastMessage.images ||\r\n                    this.props.dialog.lastMessage.files) && <>Вложения</>}\r\n                {this.props.dialog.typing && (\r\n                  <div className=\"reading-status\">печатает</div>\r\n                )}\r\n                {this.props.dialog.lastMessage.user._id !==\r\n                  this.props.user._id &&\r\n                  !!this.props.dialog.noRead && (\r\n                    <span className=\"counter\">{this.props.dialog.noRead}</span>\r\n                  )}\r\n                <Link\r\n                  className=\"sharected-link\"\r\n                  to={`/dialog/${this.props.dialog.user._id}`}\r\n                ></Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nclass Messages extends React.Component {\r\n  componentDidMount() {\r\n    if (this.props.tab == \"user\" && !this.props.dialogs.dialogsUser.isGetted)\r\n      this.props.dialogsActions.dialogsGet(this.props.user.apiToken);\r\n    if (this.props.tab == \"order\" && !this.props.dialogs.dialogsOrder.isGetted)\r\n      this.props.dialogsActions.dialogsOrderGet(this.props.user.apiToken);\r\n    if (this.props.tab == \"all\" && !this.props.dialogs.dialogsALL.isGetted)\r\n      this.props.dialogsActions\r\n        .dialogsAllGet(this.props.user.apiToken)\r\n        .then(() => {\r\n          this.onScroll();\r\n        });\r\n  }\r\n  onScroll() {\r\n    let dialogs = [];\r\n    if (this.props.tab == \"user\") dialogs = this.props.dialogs.dialogsUser;\r\n    if (this.props.tab == \"order\") dialogs = this.props.dialogs.dialogsOrder;\r\n    if (this.props.tab == \"all\") dialogs = this.props.dialogs.dialogsALL;\r\n\r\n    if (\r\n      !dialogs.isFetching &&\r\n      dialogs.canLoad &&\r\n      this.dialogsBlock.getScrollHeight() - this.dialogsBlock.getScrollTop() <=\r\n        200 + this.dialogsBlock.getClientHeight()\r\n    ) {\r\n      this.props.dialogsActions.dialogsLoad(\r\n        this.props.tab,\r\n        this.props.user.apiToken\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    let dialogs = [];\r\n    if (this.props.tab == \"user\") dialogs = this.props.dialogs.dialogsUser;\r\n    if (this.props.tab == \"order\") dialogs = this.props.dialogs.dialogsOrder;\r\n    if (this.props.tab == \"all\") dialogs = this.props.dialogs.dialogsALL;\r\n    for (let i = 0; i < dialogs.dialogs.length; i++)\r\n      for (let y = i + 1; y < dialogs.dialogs.length; y++) {\r\n        if (dialogs.dialogs[i]._id === dialogs.dialogs[y]._id) {\r\n          console.log(\"DUPLICATE\" + dialogs.dialogs[i].user.name.first);\r\n        }\r\n      }\r\n    return (\r\n      <div className=\"article-page\">\r\n        <div className=\"container-fluid\">\r\n          <h2 className=\"title\">\r\n            {this.props.tab === \"user\" && \"Сообщения пользователей\"}\r\n            {this.props.tab === \"order\" && \"Сообщения по заказам/предложениям\"}\r\n            {this.props.tab === \"all\" && \"Сообщения\"}\r\n          </h2>\r\n          <div className=\"tab_groups\">\r\n            <Link to=\"messages\">\r\n              <span\r\n                className={`tab_group ${\r\n                  this.props.tab === \"all\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                Все\r\n                {!!this.props.dialogs.dialogsALL.noReadCount && (\r\n                  <div className=\"action-counter\">\r\n                    <span>{this.props.dialogs.dialogsALL.noReadCount}</span>\r\n                  </div>\r\n                )}\r\n              </span>\r\n            </Link>\r\n            <Link to=\"/messages-by-order\">\r\n              <span\r\n                className={`tab_group ${\r\n                  this.props.tab === \"order\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                По заказам /предложениям\r\n              </span>\r\n            </Link>\r\n            <Link to=\"messages-users\">\r\n              <span\r\n                className={`tab_group ${\r\n                  this.props.tab === \"user\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                От пользователей\r\n              </span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <Loading isLoading={!dialogs.isGetted && dialogs.isFetching}></Loading>\r\n        <LoadingFixed\r\n          isLoading={dialogs.isGetted && dialogs.isFetching}\r\n        ></LoadingFixed>\r\n        <CSSTransitionGroup\r\n          transitionName=\"height-animation-item\"\r\n          transitionEnterTimeout={500}\r\n          transitionLeaveTimeout={1}\r\n          style={{\r\n            display: \"contents\",\r\n          }}\r\n        >\r\n          {!!dialogs.isGetted && (\r\n            <Scrollbars\r\n              onScroll={() => {\r\n                this.onScroll();\r\n              }}\r\n              ref={(ref) => {\r\n                this.dialogsBlock = ref;\r\n              }}\r\n              renderTrackVertical={(props) => (\r\n                <div className=\"track-vertical\" />\r\n              )}\r\n              renderThumbVertical={(props) => (\r\n                <div className=\"thumb-vertical\" />\r\n              )}\r\n              className=\"load-content scroll\"\r\n              autoHide\r\n            >\r\n              <div className=\"articles-block full\">\r\n                <div className=\"dialogs-block\">\r\n                  <div className=\"container-fluid\">\r\n                    {dialogs.dialogs.map((dialog, index) => {\r\n                      return !!dialog.lastMessage ? (\r\n                        <Dialog\r\n                          key={index}\r\n                          user={this.props.user}\r\n                          dialog={dialog}\r\n                        />\r\n                      ) : null;\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Scrollbars>\r\n          )}\r\n        </CSSTransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    dialogs: state.dialogs,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);\r\n"],"sourceRoot":""}