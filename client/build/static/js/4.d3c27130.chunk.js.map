{"version":3,"sources":["Pages/User/CreatePart/Offer1.js","Pages/User/CreatePart/Offer2.js","Pages/User/CreatePart/Offer3.js","Pages/User/NewOffer.js"],"names":["OfferCreate1","state","isExtra","isContract","isPayment","openTemplate","currentTemplate","car","comment","budget","selectTemplate","template","newState","additionally","contractInfo","info","property","paymentInfo","length","props","onChange","typesCar","setState","val","prop","name","photo","onChangeParams","isSingle","id","find","item","filter","index","push","onChangeParamsFiels","idProp","map","onChangeComment","e","target","value","onChangeBudget","onChangeCarData","carId","carDataX","isError","this","toast","error","position","POSITION","TOP_CENTER","org","array","element","itemX","currentCarType","carTypesList","currentInfo","className","carTemplates","onClick","Select","placeholder","options","label","style","fontWeight","CarSelect","apiToken","user","Input","type","min","capacity","display","CheckBox","awning","text","typeGazel","marginBottom","file","files","path","URL","createObjectURL","accept","hidden","document","getElementById","click","src","alt","CheckBoxSwitcher","lableClassname","lable","transitionName","transitionEnterTimeout","transitionLeaveTimeout","extraParams","key","additionFields","itemField","field","getIfExit","contractParams","paymentParams","height","maxWidth","marginRight","Button","paddingHorizontal","next","React","Component","OfferCreate2","isTime","isTimeInterval","addressFrom","addressTo","startDate","startTimeFrom","startTimeTo","errRequired","onChangeAddress","callback","onChangeTimeInfo","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","setHours","Number","data","fias_level","timeFrom","timeTo","date","from","to","AdressSelect","geo_lat","geo_lon","mapFrom","panTo","delay","instanceRef","ref","defaultState","center","zoom","marginTop","width","geometry","mapTo","marginLeft","alignItems","flexDirection","prev","OfferCreate3","isPro","cargoTypes","cargoData","cargoStandartData","cargoListPossible","onChangeCargoData","typeID","cargoDataX","onChangeCargoStandartData","cargoStandartDataX","onChangeTypesByOne","onChangeTypesByMore","currentCargoTypes","cargoTypesList","updateTypes","prevProps","prevTypes","currentTypes","sort","a","b","JSON","stringify","flat","self","indexOf","newCurentCargoType","preventDefault","isSelect","img","isMulti","isStandart","StandartParams","needCube","fields","OfferCreate","isFetching","notFound","currentTab","article","isEditing","match","params","fetch","api","urlApi","method","headers","Accept","Authorization","body","then","response","json","editingId","_id","setForceTitle","articleId","getCarTemplate","number","step1","step2","step3","Array","_","i","getRef","getArticlesInfo","author","Loading","isLoading","title","HeaderCreate","changeTub","setTub","nexTab","tabs","isFething","NoMatch","connect","withRouter"],"mappings":"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","file":"static/js/4.d3c27130.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"../../../Elements/Button\";\r\nimport Input from \"../../../Elements/Input\";\r\nimport Select from \"../../../Elements/Select\";\r\nimport CarSelect from \"../../../Elements/CarSelect\";\r\nimport CheckBoxSwitcher from \"../../../Elements/CheckBoxSwitcher\";\r\nimport CheckBox from \"../../../Elements/CheckBox\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport { toast } from \"react-toastify\";\r\n//Configs\r\nimport {\r\n  extraParams,\r\n  contractParams,\r\n  paymentParams,\r\n} from \"../../../config/baseInfo/carParams\";\r\nimport carTypesList from \"../../../config/baseInfo/carTypesList\";\r\n\r\n//Configs\r\nclass OfferCreate1 extends React.Component {\r\n  state = {\r\n    isExtra: false,\r\n    isContract: false,\r\n    isPayment: false,\r\n    openTemplate: false,\r\n    currentTemplate: false,\r\n    //Step1\r\n    car: {},\r\n    comment: \"\",\r\n    budget: false,\r\n  };\r\n  getArticlesInfo() {\r\n    let errorArr = {};\r\n    let isError = false;\r\n    if (!this.state.car.typesCar || !this.state.car.typesCar.length) {\r\n      toast.error(\"Выберите тип машины\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (!this.state.car.name) {\r\n      toast.error(\"Выберите марку и модель машины\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (!this.state.car.photo) {\r\n      toast.error(\"Выберите Фото машины\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (\r\n      this.state.car.contractInfo.find((item) => {\r\n        return (item.id === 2 || item.id === 3) && !item.org;\r\n      })\r\n    ) {\r\n      toast.error(\"Выберете организацию\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (isError) {\r\n      return false;\r\n    } else\r\n      return {\r\n        car: this.state.car,\r\n        comment: this.state.comment,\r\n        budget: this.state.budget,\r\n      };\r\n  }\r\n  componentDidMount() {\r\n    //Инициализация\r\n    let newState = {};\r\n    if (this.props.comment)\r\n      newState = {\r\n        ...newState,\r\n        comment: this.props.comment,\r\n      };\r\n    if (this.props.budget)\r\n      newState = {\r\n        ...newState,\r\n        budget: this.props.budget,\r\n      };\r\n    let car = this.props.car;\r\n    car = {\r\n      additionally: [],\r\n      contractInfo: [],\r\n      info: [],\r\n      property: \"\",\r\n      paymentInfo: [],\r\n      ...car,\r\n    };\r\n    newState = {\r\n      ...newState,\r\n      isExtra: !!car.additionally.length,\r\n      isContract: !!car.contractInfo && car.contractInfo.length,\r\n      isPayment: !!car.paymentInfo.length,\r\n    };\r\n    this.setState({\r\n      car: car,\r\n      ...newState,\r\n    });\r\n  }\r\n  selectTemplate = (template) => {\r\n    let newState = {};\r\n    let car = {\r\n      additionally: [],\r\n      contractInfo: [],\r\n      info: [],\r\n      property: \"\",\r\n      paymentInfo: [],\r\n      ...template.car,\r\n    };\r\n    newState = {\r\n      ...newState,\r\n      isExtra: !!car.additionally.length,\r\n      isContract: !!car.contractInfo && car.contractInfo.length,\r\n      isPayment: !!car.paymentInfo.length,\r\n    };\r\n    this.props.onChange({ typesCar: template.car.typesCar });\r\n    this.setState({ car: car, currentTemplate: template, ...newState });\r\n  };\r\n  getIfExit(array, item, prop) {\r\n    let element = false;\r\n    if ((element = array.find((itemX) => itemX.id == item)))\r\n      return element[prop] ? element[prop] : \"\";\r\n    else return \"\";\r\n  }\r\n  onChange = (val, prop) => {\r\n    let car = this.state.car;\r\n    switch (prop) {\r\n      case \"carType\":\r\n        car = { ...car, typesCar: [val], info: [] };\r\n        this.props.onChange({ typesCar: [val] });\r\n        break;\r\n      case \"carProperty\":\r\n        car = { ...car, property: val };\r\n        break;\r\n      case \"carName\":\r\n        car = { ...car, name: val };\r\n        break;\r\n      case \"carPhoto\":\r\n        car = { ...car, photo: val };\r\n        break;\r\n    }\r\n    this.setState({\r\n      car: car,\r\n    });\r\n  };\r\n  onChangeParams = (prop, val, isSingle = false) => {\r\n    let car = { ...this.state.car };\r\n    if (!isSingle) {\r\n      if (\r\n        car[prop].find((item) => {\r\n          return item.id === val;\r\n        })\r\n      ) {\r\n        car[prop] = car[prop].filter((item, index) => {\r\n          return item.id !== val;\r\n        });\r\n      } else {\r\n        car[prop].push({ id: val });\r\n      }\r\n      this.setState({\r\n        car: car,\r\n      });\r\n    } else {\r\n      car[prop] = { id: val };\r\n      this.setState({\r\n        car: car,\r\n      });\r\n    }\r\n  };\r\n  onChangeParamsFiels = (prop, idProp, name, val, isSingle = false) => {\r\n    let car = { ...this.state.car };\r\n    if (!isSingle) {\r\n      if (\r\n        car[prop].find((item) => {\r\n          return item.id === idProp;\r\n        })\r\n      ) {\r\n        car[prop] = car[prop].map((item) => {\r\n          if (item.id === idProp) {\r\n            item[name] = val;\r\n            return item;\r\n          } else return item;\r\n        });\r\n      }\r\n    } else {\r\n      car[prop][name] = val;\r\n    }\r\n    this.setState({\r\n      car: car,\r\n    });\r\n  };\r\n  onChangeComment = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n  };\r\n  onChangeBudget = (e) => {\r\n    this.setState({ budget: e.target.value });\r\n  };\r\n  onChangeCarData = (carId, prop, val) => {\r\n    let carDataX = this.state.car.info;\r\n    if (carDataX.find((item) => item.carId === carId)) {\r\n      carDataX = carDataX.map((item) => {\r\n        if (item.carId === carId) {\r\n          item[prop] = val;\r\n          return item;\r\n        } else return item;\r\n      });\r\n    } else {\r\n      carDataX.push({ carId: carId });\r\n      carDataX[carDataX.length - 1][prop] = val;\r\n    }\r\n    this.setState({ car: { ...this.state.car, info: carDataX } });\r\n  };\r\n\r\n  render() {\r\n    let currentCarType =\r\n      this.state.car.typesCar && !!this.state.car.typesCar.length\r\n        ? carTypesList.find((item) => this.state.car.typesCar[0] === item.id)\r\n        : false;\r\n    let currentInfo = {};\r\n    if (this.state.car.info)\r\n      currentInfo =\r\n        this.state.car.info.find((item) => item.carId === currentCarType.id) ||\r\n        {};\r\n    return (\r\n      <div className={`step-create ${this.props.className}`}>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"mt-3 col-12 col-md-8 mx-0 px-0 row carInfo\">\r\n              {!!this.props.carTemplates.length && (\r\n                <div>\r\n                  <a\r\n                    className=\"href hover\"\r\n                    onClick={() => {\r\n                      this.setState({ openTemplate: !this.state.openTemplate });\r\n                    }}\r\n                  >\r\n                    {this.state.openTemplate\r\n                      ? \"Закрыть выбор шаблонов\"\r\n                      : \"Выбрать из шаблона Авто\"}\r\n                  </a>\r\n                  {this.state.openTemplate && (\r\n                    <Select\r\n                      placeholder=\"Шаблоны машины\"\r\n                      options={this.props.carTemplates.map((item) => {\r\n                        return {\r\n                          value: item,\r\n                          label: item.car.name,\r\n                        };\r\n                      })}\r\n                      value={\r\n                        this.state.currentTemplate\r\n                          ? {\r\n                              value: this.state.currentTemplate,\r\n                              label: this.state.currentTemplate.car.name,\r\n                            }\r\n                          : null\r\n                      }\r\n                      onChange={(val) => {\r\n                        this.selectTemplate(val.value);\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n              <h4\r\n                className=\"f-16 col-12 mb-1\"\r\n                style={{\r\n                  fontWeight: \"normal\",\r\n                }}\r\n              >\r\n                Тип авто\r\n              </h4>\r\n              <div className=\"mt-3 carType\">\r\n                <Select\r\n                  placeholder=\"Тип  машины\"\r\n                  options={carTypesList.map((item) => {\r\n                    return {\r\n                      value: item.id,\r\n                      label: item.name,\r\n                    };\r\n                  })}\r\n                  value={\r\n                    currentCarType\r\n                      ? {\r\n                          value: currentCarType.id,\r\n                          label: currentCarType.name,\r\n                        }\r\n                      : null\r\n                  }\r\n                  onChange={(val) => {\r\n                    this.onChange(val.value, \"carType\");\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"carName mt-3\">\r\n                <CarSelect\r\n                  value={this.state.car.name}\r\n                  apiToken={this.props.user.apiToken}\r\n                  onChange={(val) => {\r\n                    this.onChange(val.value, \"carName\");\r\n                  }}\r\n                />\r\n              </div>\r\n              {currentCarType && (\r\n                <div className=\"carMoreInfo carInfo row w-100\">\r\n                  {currentCarType.id !== 1 && (\r\n                    <div className=\"carType\">\r\n                      <div className=\"f-14 mb-2\">Грузоподъемность в тоннах</div>\r\n                      <Input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        placeholder=\"Грузоподьемность\"\r\n                        value={currentInfo.capacity || \"\"}\r\n                        onChange={(e) => {\r\n                          this.onChangeCarData(\r\n                            currentCarType.id,\r\n                            \"capacity\",\r\n                            e.target.value\r\n                          );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {currentCarType.id === 12 && (\r\n                    <div className=\"moreInfoCheckBox\">\r\n                      <div className=\"f-14 mb-2\">Тентовый</div>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-block\",\r\n                        }}\r\n                      >\r\n                        <CheckBox\r\n                          id=\"awning1\"\r\n                          name=\"awning\"\r\n                          value={currentInfo.awning === \"Жесткий борт\" || \"\"}\r\n                          onChange={() => {\r\n                            this.onChangeCarData(\r\n                              currentCarType.id,\r\n                              \"awning\",\r\n                              \"Жесткий борт\"\r\n                            );\r\n                          }}\r\n                          text={\"Жесткий борт\"}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-block\",\r\n                        }}\r\n                      >\r\n                        <CheckBox\r\n                          id=\"awning2\"\r\n                          name=\"awning\"\r\n                          value={\r\n                            currentInfo.awning === \"Съемная верхняя балка\" || \"\"\r\n                          }\r\n                          onChange={() => {\r\n                            this.onChangeCarData(\r\n                              currentCarType.id,\r\n                              \"awning\",\r\n                              \"Съемная верхняя балка\"\r\n                            );\r\n                          }}\r\n                          text={\"Съемная верхняя балка\"}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-block\",\r\n                        }}\r\n                      >\r\n                        <CheckBox\r\n                          id=\"awning3\"\r\n                          name=\"awning\"\r\n                          value={\r\n                            (currentInfo &&\r\n                              currentInfo.awning ===\r\n                                \"Съемная боковая стойка\") ||\r\n                            \"\"\r\n                          }\r\n                          onChange={() => {\r\n                            this.onChangeCarData(\r\n                              currentCarType.id,\r\n                              \"awning\",\r\n                              \"Съемная боковая стойка\"\r\n                            );\r\n                          }}\r\n                          text={\"Съемная боковая стойка\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {currentCarType.id === 9 && (\r\n                    <div className=\"moreInfoCheckBox\">\r\n                      <div className=\"f-14 mb-2\">Тип</div>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-block\",\r\n                        }}\r\n                      >\r\n                        <CheckBox\r\n                          id=\"typeGazel1\"\r\n                          name=\"typeGazel\"\r\n                          value={\r\n                            currentInfo.typeGazel === \"Цельнометаллическая\" ||\r\n                            \"\"\r\n                          }\r\n                          onChange={() => {\r\n                            this.onChangeCarData(\r\n                              currentCarType.id,\r\n                              \"typeGazel\",\r\n                              \"Цельнометаллическая\"\r\n                            );\r\n                          }}\r\n                          text={\"Цельнометаллическая\"}\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-block\",\r\n                        }}\r\n                      >\r\n                        <CheckBox\r\n                          id=\"typeGazel2\"\r\n                          name=\"typeGazel\"\r\n                          value={currentInfo.typeGazel === \"С тентом\" || \"\"}\r\n                          onChange={() => {\r\n                            this.onChangeCarData(\r\n                              currentCarType.id,\r\n                              \"typeGazel\",\r\n                              \"С тентом\"\r\n                            );\r\n                          }}\r\n                          text={\"С тентом\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"moreInfoCheckBox\">\r\n                    <div className=\"f-14\">Свойство:</div>\r\n                    <div\r\n                      style={{\r\n                        display: \"inline-block\",\r\n                      }}\r\n                    >\r\n                      <CheckBox\r\n                        id=\"property1\"\r\n                        name=\"property\"\r\n                        value={\r\n                          (this.state.car &&\r\n                            this.state.car.property === \"Манипулятор\") ||\r\n                          \"\"\r\n                        }\r\n                        onChange={() => {\r\n                          if (\r\n                            this.state.car &&\r\n                            this.state.car.property === \"Манипулятор\"\r\n                          )\r\n                            this.onChange(false, \"carProperty\");\r\n                          else this.onChange(\"Манипулятор\", \"carProperty\");\r\n                        }}\r\n                        text={\"Манипулятор\"}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"inline-block\",\r\n                      }}\r\n                    >\r\n                      <CheckBox\r\n                        id=\"property2\"\r\n                        name=\"property\"\r\n                        value={\r\n                          (this.state.car &&\r\n                            this.state.car.property === \"Рефрижератор\") ||\r\n                          \"\"\r\n                        }\r\n                        onChange={() => {\r\n                          if (\r\n                            this.state.car &&\r\n                            this.state.car.property === \"Рефрижератор\"\r\n                          )\r\n                            this.onChange(false, \"carProperty\");\r\n                          else this.onChange(\"Рефрижератор\", \"carProperty\");\r\n                        }}\r\n                        text={\"Рефрижератор\"}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"inline-block\",\r\n                      }}\r\n                    >\r\n                      <CheckBox\r\n                        id=\"property3\"\r\n                        name=\"property\"\r\n                        value={\r\n                          (this.state.car &&\r\n                            this.state.car.property === \"Изотерм\") ||\r\n                          \"\"\r\n                        }\r\n                        onChange={() => {\r\n                          if (\r\n                            this.state.car &&\r\n                            this.state.car.property === \"Изотерм\"\r\n                          )\r\n                            this.onChange(false, \"carProperty\");\r\n                          else this.onChange(\"Изотерм\", \"carProperty\");\r\n                        }}\r\n                        text={\"Изотерм\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-3 col-12 col-md-4 row addPhotoCarBlock\">\r\n              <h4\r\n                className=\"f-16 col-12 text-center\"\r\n                style={{\r\n                  marginBottom: \"20px\",\r\n                  fontWeight: \"normal\",\r\n                }}\r\n              >\r\n                Добавьте фото машины\r\n              </h4>\r\n              <input\r\n                id=\"photoCar\"\r\n                onChange={(e) => {\r\n                  let file = e.target.files[0];\r\n                  this.onChange(\r\n                    { file: file, path: URL.createObjectURL(file) },\r\n                    \"carPhoto\"\r\n                  );\r\n                }}\r\n                type=\"file\"\r\n                accept=\"image/jpeg,image/png\"\r\n                hidden\r\n              />\r\n              <div\r\n                className={`inputPhoto ${\r\n                  !this.state.car.photo ? \"unload\" : \"\"\r\n                } `}\r\n              >\r\n                <div\r\n                  className=\"placeholder\"\r\n                  onClick={() => {\r\n                    document.getElementById(\"photoCar\").click();\r\n                  }}\r\n                >\r\n                  <span>Загрузить</span>\r\n                </div>\r\n                {this.state.car.photo && (\r\n                  <img\r\n                    src={\r\n                      this.state.car.photo ? this.state.car.photo.path : false\r\n                    }\r\n                    className=\"carPhoto\"\r\n                    alt=\"carPhoto\"\r\n                  />\r\n                )}\r\n                {!this.state.car.photo && <div className=\"carPhoto\" />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row swicher-wrapper\">\r\n            <div className=\"col-sm-6 col-md-4\">\r\n              <div className=\"CheckBoxSwitcher-wrapper\">\r\n                <CheckBoxSwitcher\r\n                  lableClassname=\"f-16\"\r\n                  val={this.state.isExtra}\r\n                  onChange={() => {\r\n                    this.setState({\r\n                      isExtra: !this.state.isExtra,\r\n                    });\r\n                  }}\r\n                  lable=\"Дополнительные параметры\"\r\n                />\r\n              </div>\r\n              <CSSTransitionGroup\r\n                transitionName=\"height-animation-item\"\r\n                transitionEnterTimeout={300}\r\n                transitionLeaveTimeout={300}\r\n                style={{\r\n                  display: \"contents\",\r\n                }}\r\n              >\r\n                {this.state.isExtra && (\r\n                  <div className=\"checkboxGroup\">\r\n                    {extraParams.map((item, index) => {\r\n                      return (\r\n                        <div key={index} className=\"checkboxParam\">\r\n                          <CheckBox\r\n                            id={`additionally${item.id}`}\r\n                            name={`additionally${item.id}`}\r\n                            value={this.state.car.additionally.find(\r\n                              (itemX) => itemX.id == item.id\r\n                            )}\r\n                            onChange={() => {\r\n                              this.onChangeParams(\"additionally\", item.id);\r\n                            }}\r\n                            text={item.name}\r\n                          />\r\n                          {item.additionFields &&\r\n                            this.state.car.additionally.find(\r\n                              (itemX) => itemX.id === item.id\r\n                            ) &&\r\n                            item.additionFields.map((itemField, index) => {\r\n                              return (\r\n                                <itemField.field\r\n                                  key={index}\r\n                                  {...itemField.props}\r\n                                  value={this.getIfExit(\r\n                                    this.state.car.additionally,\r\n                                    item.id,\r\n                                    itemField.name\r\n                                  )}\r\n                                  onChange={(e) => {\r\n                                    this.onChangeParamsFiels(\r\n                                      \"additionally\",\r\n                                      item.id,\r\n                                      itemField.name,\r\n                                      e.target.value\r\n                                    );\r\n                                  }}\r\n                                ></itemField.field>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </CSSTransitionGroup>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-4\">\r\n              <div className=\"CheckBoxSwitcher-wrapper\">\r\n                <CheckBoxSwitcher\r\n                  val={this.state.isContract}\r\n                  onChange={() => {\r\n                    this.setState({\r\n                      isContract: !this.state.isContract,\r\n                    });\r\n                  }}\r\n                  lable=\"Заключение договора\"\r\n                />\r\n              </div>\r\n              <CSSTransitionGroup\r\n                transitionName=\"height-animation-item\"\r\n                transitionEnterTimeout={300}\r\n                transitionLeaveTimeout={300}\r\n                style={{\r\n                  display: \"contents\",\r\n                }}\r\n              >\r\n                {this.state.isContract && (\r\n                  <div className=\"checkboxGroup contract\">\r\n                    {contractParams.map((item, index) => {\r\n                      return (\r\n                        <div key={index} className=\"checkboxParam\">\r\n                          <CheckBox\r\n                            id={`contractParams${item.id}`}\r\n                            name={`contractParams`}\r\n                            value={this.state.car.contractInfo.find(\r\n                              (itemX) => itemX.id === item.id\r\n                            )}\r\n                            onChange={() => {\r\n                              this.onChangeParams(\"contractInfo\", item.id);\r\n                            }}\r\n                            text={item.name}\r\n                          />\r\n                          {item.additionFields &&\r\n                            this.state.car.contractInfo.find(\r\n                              (itemX) => itemX.id === item.id\r\n                            ) &&\r\n                            item.additionFields.map((itemField, index) => {\r\n                              return (\r\n                                <itemField.field\r\n                                  key={index}\r\n                                  {...itemField.props}\r\n                                  value={\r\n                                    this.getIfExit(\r\n                                      this.state.car.contractInfo,\r\n                                      item.id,\r\n                                      itemField.props.name\r\n                                    ).value\r\n                                  }\r\n                                  onChange={(val) => {\r\n                                    this.onChangeParamsFiels(\r\n                                      \"contractInfo\",\r\n                                      item.id,\r\n                                      itemField.props.name,\r\n                                      val\r\n                                    );\r\n                                  }}\r\n                                ></itemField.field>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </CSSTransitionGroup>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-4\">\r\n              <div className=\"CheckBoxSwitcher-wrapper\">\r\n                <CheckBoxSwitcher\r\n                  val={this.state.isPayment}\r\n                  onChange={() => {\r\n                    this.setState({\r\n                      isPayment: !this.state.isPayment,\r\n                    });\r\n                  }}\r\n                  lable=\"Способы оплаты водителю\"\r\n                />\r\n              </div>\r\n              <CSSTransitionGroup\r\n                transitionName=\"height-animation-item\"\r\n                transitionEnterTimeout={300}\r\n                transitionLeaveTimeout={300}\r\n                style={{\r\n                  display: \"contents\",\r\n                }}\r\n              >\r\n                {this.state.isPayment && (\r\n                  <div className=\"checkboxGroup\">\r\n                    {paymentParams.map((item, index) => {\r\n                      return (\r\n                        <div key={index} className=\"checkboxParam\">\r\n                          <CheckBox\r\n                            id={`paymentParams${item.id}`}\r\n                            name={`paymentParams${item.id}`}\r\n                            value={\r\n                              this.state.car.paymentInfo.length &&\r\n                              !!this.state.car.paymentInfo.find(\r\n                                (itemX) => itemX.id === item.id\r\n                              )\r\n                            }\r\n                            onChange={() => {\r\n                              this.onChangeParams(\"paymentInfo\", item.id);\r\n                            }}\r\n                            text={item.name}\r\n                          />\r\n                          {item.additionFields &&\r\n                            this.state.car.paymentInfo.find(\r\n                              (itemX) => itemX === item.id\r\n                            ) &&\r\n                            item.additionFields.map((itemField, index) => {\r\n                              return (\r\n                                <itemField.field\r\n                                  key={index}\r\n                                  {...itemField.props}\r\n                                  value={\r\n                                    this.state.car.paymentInfo[\r\n                                      itemField.props.name\r\n                                    ]\r\n                                  }\r\n                                  onChange={(e) => {\r\n                                    this.onChangeParamsFiels(\r\n                                      \"paymentInfo\",\r\n                                      item.id,\r\n                                      itemField.props.name,\r\n                                      e.target.value\r\n                                    );\r\n                                  }}\r\n                                ></itemField.field>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </CSSTransitionGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row \">\r\n            <div className=\"col-12 col-sm-8 mt-4\">\r\n              <div className=\"mb-2 f-16\">Комментарий</div>\r\n              <textarea\r\n                className=\"w-100\"\r\n                onChange={this.onChangeComment}\r\n                style={{\r\n                  height: \"70px\",\r\n                }}\r\n                value={this.state.comment ? this.state.comment : \"\"}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"col-12 col-sm-4 mt-4\">\r\n              <div className=\"mb-2 f-16\">Желаемый бюджет</div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <Input\r\n                  style={{\r\n                    maxWidth: \"113px\",\r\n                    marginRight: \"7px\",\r\n                  }}\r\n                  type=\"number\"\r\n                  onChange={this.onChangeBudget}\r\n                  value={this.state.budget ? this.state.budget : \"\"}\r\n                  placeholder=\"0\"\r\n                />\r\n                <span>руб</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row slide-step justify-content-end\">\r\n            <Button\r\n              type=\"fill\"\r\n              className=\" input-action\"\r\n              paddingHorizontal=\"40px\"\r\n              onClick={this.props.next}\r\n            >\r\n              Вперед\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default OfferCreate1;\r\n","// App\r\nimport React from \"react\";\r\n// Elements\r\nimport Button from \"../../../Elements/Button\";\r\nimport Input from \"../../../Elements/Input\";\r\nimport CheckBox from \"../../../Elements/CheckBox\";\r\nimport AdressSelect from \"../../../Elements/AdressSelect\";\r\nimport { Map, Placemark } from \"react-yandex-maps\";\r\nimport { toast } from \"react-toastify\";\r\nclass OfferCreate2 extends React.Component {\r\n  state = {\r\n    isTime: false,\r\n    isTimeInterval: false,\r\n    addressFrom: false,\r\n    addressTo: false,\r\n    startDate: false,\r\n    startTimeFrom: false,\r\n    startTimeTo: false,\r\n    errRequired: {},\r\n  };\r\n  getArticlesInfo() {\r\n    let errorArr = {};\r\n    let isError = false;\r\n    if (\r\n      this.state.startDate &&\r\n      new Date(this.state.startDate) < new Date().setHours(0,0,0,0)\r\n    ) {\r\n      toast.error(\"Дата должна быть больше текущей\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (\r\n      !this.state.addressFrom ||\r\n      Number(this.state.addressFrom.data.fias_level) !== 8\r\n    ) {\r\n      toast.error(\"Введите адрес отправления до дома\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (\r\n      !this.state.addressTo ||\r\n      Number(this.state.addressTo.data.fias_level) !== 8\r\n    ) {\r\n      toast.error(\"Введите адрес доставки до дома\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (isError) {\r\n      return false;\r\n    } else\r\n      return {\r\n        startDate: this.state.startDate\r\n          ? {\r\n              timeFrom: this.state.startTimeFrom,\r\n              timeTo: this.state.startTimeTo,\r\n              date: this.state.startDate,\r\n            }\r\n          : false,\r\n        from: this.state.addressFrom,\r\n        to: this.state.addressTo,\r\n      };\r\n  }\r\n  componentDidMount() {\r\n    //Инициализация\r\n    let newState = {};\r\n    if (this.props.addressFrom)\r\n      newState = {\r\n        addressFrom: this.props.addressFrom,\r\n      };\r\n    if (this.props.addressTo)\r\n      newState = {\r\n        ...newState,\r\n        addressTo: this.props.addressTo,\r\n      };\r\n    if (this.props.startDate) {\r\n      if (this.props.startDate.date)\r\n        newState = {\r\n          ...newState,\r\n          startDate: this.props.startDate.date,\r\n        };\r\n      if (this.props.startDate.date)\r\n        newState = {\r\n          ...newState,\r\n          startTimeFrom: this.props.startDate.timeFrom,\r\n        };\r\n      if (this.props.startDate.date)\r\n        newState = {\r\n          ...newState,\r\n          startTimeTo: this.props.startDate.timeTo,\r\n        };\r\n    }\r\n    this.setState({\r\n      ...newState,\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.startTimeFrom && !this.state.isTime)\r\n      this.setState({ isTime: true });\r\n    if (this.state.startTimeTo && !this.state.isTimeInterval)\r\n      this.setState({ isTimeInterval: true });\r\n  }\r\n  onChangeAddress = (prop, val, callback) => {\r\n    switch (prop) {\r\n      case \"From\":\r\n        this.setState({ addressFrom: val }, callback);\r\n        break;\r\n      case \"To\":\r\n        this.setState({ addressTo: val }, callback);\r\n        break;\r\n    }\r\n  };\r\n  onChangeTimeInfo = (prop, val, callback) => {\r\n    let startTimeFrom = new Date(this.state.startTimeFrom);\r\n    let startTimeTo = new Date(this.state.startTimeTo);\r\n    switch (prop) {\r\n      case \"date\":\r\n        {\r\n          let state = { startDate: val };\r\n          if (this.state.startTimeFrom) {\r\n            state.startTimeFrom = new Date(\r\n              val.getFullYear(),\r\n              val.getMonth(),\r\n              val.getDate(),\r\n              startTimeFrom.getHours(),\r\n              startTimeFrom.getMinutes(),\r\n              startTimeFrom.getSeconds()\r\n            );\r\n          }\r\n          if (this.state.startTimeTo) {\r\n            state.startTimeTo = new Date(\r\n              val.getFullYear(),\r\n              val.getMonth(),\r\n              val.getDate(),\r\n              startTimeTo.getHours(),\r\n              startTimeTo.getMinutes(),\r\n              startTimeTo.getSeconds()\r\n            );\r\n          }\r\n          this.setState(state, callback);\r\n        }\r\n        break;\r\n      case \"From\":\r\n        let state;\r\n        if (!val) {\r\n          state = { startTimeFrom: false, startTimeTo: false };\r\n        } else if (startTimeTo < val)\r\n          state = { startTimeFrom: val, startTimeTo: false };\r\n        else state = { startTimeFrom: val };\r\n        this.setState(state, callback);\r\n        break;\r\n      case \"To\":\r\n        if (startTimeFrom > val && val)\r\n          toast.error(`Время \"До\" должно быть больше времени \"От\" `, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n        else {\r\n          this.setState({ startTimeTo: val }, callback);\r\n        }\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={`step-create ${this.props.className}`}>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row align-items-start\">\r\n            <div className=\"col-xl-8 mt-2 col-12 row\">\r\n              <h4\r\n                className=\"f-16 col-12 mb-1\"\r\n                style={{\r\n                  fontWeight: \"normal\",\r\n                }}\r\n              >\r\n                Маршрут\r\n              </h4>\r\n              <div className=\"col-12 col-sm-6 mt-2\">\r\n                <AdressSelect\r\n                  placeholder=\"Откуда\"\r\n                  className={`${\r\n                    this.state.errRequired.addressFrom ? \"errRequired\" : \"\"\r\n                  }`}\r\n                  value={\r\n                    this.state.addressFrom ? this.state.addressFrom.value : \"\"\r\n                  }\r\n                  onChange={(val) => {\r\n                    if (val && Number(val.data.fias_level) === 8)\r\n                      this.setState({\r\n                        errRequired: {\r\n                          ...this.state.errRequired,\r\n                          addressFrom: false,\r\n                        },\r\n                      });\r\n                    this.onChangeAddress(\"From\", val, () => {\r\n                      if (val && val.data.geo_lat && val.data.geo_lon) {\r\n                        this.mapFrom.panTo(\r\n                          [Number(val.data.geo_lat), Number(val.data.geo_lon)],\r\n                          {\r\n                            delay: 1500,\r\n                          }\r\n                        );\r\n                      }\r\n                    });\r\n                  }}\r\n                />\r\n                <Map\r\n                  instanceRef={(ref) => {\r\n                    this.mapFrom = ref;\r\n                  }}\r\n                  defaultState={{\r\n                    center: this.state.addressFrom\r\n                      ? [\r\n                          this.state.addressFrom.data.geo_lat,\r\n                          this.state.addressFrom.data.geo_lon,\r\n                        ]\r\n                      : [55.684758, 37.738521],\r\n                    zoom: 10,\r\n                  }}\r\n                  style={{\r\n                    marginTop: \"21px\",\r\n                    height: \"220px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  {this.state.addressFrom &&\r\n                    this.state.addressFrom.data.geo_lat &&\r\n                    this.state.addressFrom.data.geo_lon && (\r\n                      <Placemark\r\n                        geometry={[\r\n                          this.state.addressFrom.data.geo_lat,\r\n                          this.state.addressFrom.data.geo_lon,\r\n                        ]}\r\n                      />\r\n                    )}\r\n                </Map>\r\n              </div>\r\n              <div className=\"col-12 col-sm-6 mt-2\">\r\n                <AdressSelect\r\n                  placeholder=\"Куда\"\r\n                  className={`${\r\n                    this.state.errRequired.addressTo ? \"errRequired\" : \"\"\r\n                  }`}\r\n                  value={this.state.addressTo ? this.state.addressTo.value : \"\"}\r\n                  onChange={(val) => {\r\n                    if (val && Number(val.data.fias_level) === 8)\r\n                      this.setState({\r\n                        errRequired: {\r\n                          ...this.state.errRequired,\r\n                          addressTo: false,\r\n                        },\r\n                      });\r\n\r\n                    this.onChangeAddress(\"To\", val, () => {\r\n                      if (val && val.data.geo_lat && val.data.geo_lon) {\r\n                        this.mapTo.panTo(\r\n                          [Number(val.data.geo_lat), Number(val.data.geo_lon)],\r\n                          {\r\n                            delay: 1500,\r\n                          }\r\n                        );\r\n                      }\r\n                    });\r\n                  }}\r\n                />\r\n                <Map\r\n                  instanceRef={(ref) => {\r\n                    this.mapTo = ref;\r\n                  }}\r\n                  defaultState={{\r\n                    center: this.state.addressTo\r\n                      ? [\r\n                          this.state.addressTo.data.geo_lat,\r\n                          this.state.addressTo.data.geo_lon,\r\n                        ]\r\n                      : [55.684758, 37.738521],\r\n                    zoom: 10,\r\n                  }}\r\n                  style={{\r\n                    marginTop: \"21px\",\r\n                    height: \"220px\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  {this.state.addressTo &&\r\n                    this.state.addressTo.data.geo_lat &&\r\n                    this.state.addressTo.data.geo_lon && (\r\n                      <Placemark\r\n                        geometry={[\r\n                          this.state.addressTo.data.geo_lat,\r\n                          this.state.addressTo.data.geo_lon,\r\n                        ]}\r\n                      />\r\n                    )}\r\n                </Map>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-4 mt-2 col-12 row\">\r\n              <h4\r\n                className=\"f-16 col-12\"\r\n                style={{\r\n                  marginBottom: \"12px\",\r\n                  fontWeight: \"normal\",\r\n                }}\r\n              >\r\n                Дата и время\r\n              </h4>\r\n              <div\r\n                className=\"col-12 row mx-0\"\r\n                style={{\r\n                  marginLeft: \"0\",\r\n                  marginRight: \"0\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <span className=\"filter-input-title\">\r\n                  Дата<br></br>погрузки\r\n                </span>\r\n                <Input\r\n                  type=\"date\"\r\n                  className={`${\r\n                    this.state.errRequired.startDate ? \"errRequired\" : \"\"\r\n                  }`}\r\n                  style={{ width: \"130px\" }}\r\n                  placeholder=\"Введите дату\"\r\n                  value={this.state.startDate || null}\r\n                  onChange={(val) => {\r\n                    this.setState({\r\n                      errRequired: {\r\n                        ...this.state.startDate,\r\n                        startDate: false,\r\n                      },\r\n                    });\r\n                    this.onChangeTimeInfo(\"date\", val);\r\n                  }}\r\n                />\r\n              </div>\r\n              {this.state.startDate && (\r\n                <div\r\n                  className=\"col d-flex align-items-center\"\r\n                  style={{\r\n                    marginTop: \"21px\",\r\n                    maxWidth: \"146px\",\r\n                  }}\r\n                >\r\n                  <CheckBox\r\n                    id=\"isTime\"\r\n                    value={this.state.isTime}\r\n                    onChange={() => {\r\n                      if (this.state.isTime)\r\n                        this.onChangeTimeInfo(\"From\", false);\r\n                      this.setState({ isTime: !this.state.isTime });\r\n                    }}\r\n                    text=\"Указать время\"\r\n                  />\r\n                </div>\r\n              )}\r\n              {this.state.isTime && (\r\n                <>\r\n                  <div\r\n                    className=\"col d-flex align-items-center\"\r\n                    style={{\r\n                      marginTop: \"21px\",\r\n                      maxWidth: \"172px\",\r\n                    }}\r\n                  >\r\n                    {this.state.startTimeFrom && (\r\n                      <CheckBox\r\n                        id=\"isTimeInterval\"\r\n                        onChange={() => {\r\n                          if (this.state.isTimeInterval)\r\n                            this.onChangeTimeInfo(\"To\", false);\r\n                          this.setState({\r\n                            isTimeInterval: !this.state.isTimeInterval,\r\n                          });\r\n                        }}\r\n                        value={this.state.isTimeInterval}\r\n                        text=\"Добавить интервал\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className=\"d-inline-flex  col-12 mt-3\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"row\",\r\n                    }}\r\n                  >\r\n                    <span className=\"filter-input-title mb-0\">\r\n                      Время<br></br>погрузки\r\n                    </span>\r\n                    <Input\r\n                      date={this.state.startDate}\r\n                      type=\"time\"\r\n                      value={this.state.startTimeFrom || null}\r\n                      onChange={(val) => {\r\n                        this.onChangeTimeInfo(\"From\", val);\r\n                      }}\r\n                    />\r\n                    {this.state.isTimeInterval && (\r\n                      <>\r\n                        <span className=\"filter-input-title mb-0\">\r\n                          &nbsp;&nbsp;-\r\n                        </span>\r\n                        <Input\r\n                          date={this.state.startDate}\r\n                          type=\"time\"\r\n                          value={this.state.startTimeTo || null}\r\n                          onChange={(val) => {\r\n                            this.onChangeTimeInfo(\"To\", val);\r\n                          }}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"row slide-step justify-content-end\">\r\n            <Button\r\n              type=\"empty\"\r\n              className=\" input-action\"\r\n              paddingHorizontal=\"40px\"\r\n              onClick={this.props.prev}\r\n            >\r\n              Назад\r\n            </Button>\r\n            <Button\r\n              type=\"fill\"\r\n              className=\" input-action\"\r\n              paddingHorizontal=\"40px\"\r\n              onClick={this.props.next}\r\n            >\r\n              Вперед\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default OfferCreate2;\r\n","// App\r\nimport React from \"react\";\r\n// Elements\r\nimport Button from \"../../../Elements/Button\";\r\nimport Select from \"../../../Elements/Select\";\r\nimport { Link } from \"react-router-dom\";\r\n//Configs\r\nimport { toast } from \"react-toastify\";\r\nimport carTypesList from \"../../../config/baseInfo/carTypesList\";\r\nimport cargoTypesList from \"../../../config/baseInfo/cargoTypesList\";\r\n//Configs\r\nimport StandartParams from \"./StandartParams\";\r\n\r\nclass OfferCreate3 extends React.Component {\r\n  state = {\r\n    isPro: false,\r\n    cargoTypes: [],\r\n    cargoData: [],\r\n    cargoStandartData: {},\r\n    cargoListPossible: [],\r\n  };\r\n  componentDidMount() {\r\n    let currentCargoTypes = cargoTypesList.filter((item) => {\r\n      return (\r\n        !!this.props.cargoTypes &&\r\n        !!this.props.cargoTypes.find((itemX) => {\r\n          return itemX === item.id;\r\n        })\r\n      );\r\n    });\r\n    //Инициализация\r\n    let newState = {};\r\n    if (this.props.cargoTypes)\r\n      newState = {\r\n        cargoTypes: this.props.cargoTypes,\r\n      };\r\n    if (currentCargoTypes.find((item) => item.isPro))\r\n      newState = {\r\n        ...newState,\r\n        isPro: true,\r\n      };\r\n    if (this.props.cargoData)\r\n      newState = {\r\n        ...newState,\r\n        cargoData: this.props.cargoData,\r\n      };\r\n    if (this.props.cargoStandartData)\r\n      newState = {\r\n        ...newState,\r\n        cargoStandartData: this.props.cargoStandartData,\r\n      };\r\n    this.setState(\r\n      {\r\n        ...newState,\r\n      },\r\n      this.updateTypes()\r\n    );\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.typesCar || this.props.typesCar) {\r\n      let prevTypes = prevProps.typesCar || [];\r\n      let currentTypes = this.props.typesCar || [];\r\n      prevTypes.sort((a, b) => b - a);\r\n      currentTypes.sort((a, b) => b - a);\r\n      if (JSON.stringify(prevTypes) !== JSON.stringify(currentTypes)) {\r\n        //Получение позможных относителдьно машины грузов\r\n        this.updateTypes();\r\n      }\r\n    }\r\n  }\r\n  updateTypes() {\r\n    let cargoListPossible = [];\r\n\r\n    cargoListPossible = this.props.typesCar.map((item) => {\r\n      return carTypesList.find((itemX) => itemX.id == item).cargoTypes;\r\n    });\r\n\r\n    cargoListPossible = cargoListPossible\r\n      .flat()\r\n      .filter(function (value, index, self) {\r\n        return self.indexOf(value) === index;\r\n      });\r\n    cargoListPossible = cargoListPossible.map((item) => {\r\n      return cargoTypesList.find((itemX) => itemX.id === item);\r\n    });\r\n\r\n    //Получение позможных относителдьно машины грузов\r\n    let newCurentCargoType = this.state.cargoTypes.filter((item) => {\r\n      return cargoListPossible.find((itemX) => itemX.id === item);\r\n    });\r\n    let isPro = false;\r\n    if (\r\n      newCurentCargoType.find((item) => item.isPro) ||\r\n      !cargoListPossible.find((item) => !item.isPro)\r\n    )\r\n      isPro = true;\r\n    this.setState({\r\n      cargoListPossible: cargoListPossible,\r\n      cargoTypes: newCurentCargoType,\r\n      cargoData: [],\r\n      isPro: isPro,\r\n    });\r\n  }\r\n  getArticlesInfo() {\r\n    let errorArr = {};\r\n    let isError = false;\r\n    if (!this.state.cargoTypes.length) {\r\n      toast.error(\"Выберите тип груза\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (isError) {\r\n      return false;\r\n    } else\r\n      return {\r\n        cargoTypes: this.state.cargoTypes,\r\n        cargoData: this.state.cargoData,\r\n        cargoStandartData: this.state.cargoStandartData,\r\n      };\r\n  }\r\n  //Динамические данные не учавствующие  в поиске\r\n  onChangeCargoData = (typeID, prop, val) => {\r\n    let cargoDataX = this.state.cargoData;\r\n    if (cargoDataX.find((item) => item.typeID === typeID)) {\r\n      cargoDataX = cargoDataX.map((item) => {\r\n        if (item.typeID === typeID) {\r\n          item[prop] = val;\r\n          return item;\r\n        } else return item;\r\n      });\r\n    } else {\r\n      cargoDataX.push({ typeID: typeID });\r\n      cargoDataX[cargoDataX.length - 1][prop] = val;\r\n    }\r\n    this.setState({ cargoData: cargoDataX });\r\n  };\r\n  //Стандартные данные который участвуют в поиске\r\n  onChangeCargoStandartData = (prop, val) => {\r\n    let cargoStandartDataX = this.state.cargoStandartData;\r\n    cargoStandartDataX[prop] = val;\r\n    this.setState({ cargoStandartData: cargoStandartDataX });\r\n  };\r\n  onChangeTypesByOne = (item) => {\r\n    if (this.state.cargoTypes.find((itemX) => itemX === item.id)) {\r\n      this.setState({\r\n        cargoTypes: this.state.cargoTypes.filter((itemX) => itemX !== item.id),\r\n        //Удаление старых параметров\r\n        cargoData: this.state.cargoData.filter(\r\n          (itemX, index) => itemX.typeID !== item.id\r\n        ),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cargoTypes: [...this.state.cargoTypes, item.id],\r\n      });\r\n    }\r\n  };\r\n  onChangeTypesByMore = (val) => {\r\n    if (val)\r\n      val = val.map((item) => {\r\n        return item.value;\r\n      });\r\n    else val = [];\r\n    let cargoData = false;\r\n    if (val.length < this.state.cargoTypes) {\r\n      cargoData = this.state.cargoData.filter((item, index) =>\r\n        val.find((itemX) => itemX === item.typeID)\r\n      );\r\n    }\r\n    this.setState({\r\n      cargoTypes: [...val],\r\n      cargoData: cargoData || this.state.cargoData,\r\n    });\r\n  };\r\n  render() {\r\n    let currentCargoTypes = cargoTypesList.filter((item) => {\r\n      return !!this.state.cargoTypes.find((itemX) => {\r\n        return itemX === item.id;\r\n      });\r\n    });\r\n    return (\r\n      <div className={`step-create ${this.props.className}`}>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"box-grooz-wrapper-row align-items-start justify-content-start\">\r\n            <h4\r\n              className={`f-16 col-12 mb-1`}\r\n              style={{\r\n                fontWeight: \"normal\",\r\n              }}\r\n            >\r\n              <span>Тип груза</span>\r\n\r\n              <Link\r\n                to=\"/\"\r\n                className=\"href f-14 ml-4\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  this.setState({ isPro: !this.state.isPro });\r\n                }}\r\n              >\r\n                {!this.state.isPro && <>Открыть</>}\r\n                {this.state.isPro && <>Закрыть</>} Pro список\r\n              </Link>\r\n            </h4>\r\n            {!this.state.isPro && (\r\n              <>\r\n                {this.state.cargoListPossible.map((item, index) => {\r\n                  if (!item.isPro) {\r\n                    //Проверка на отмеченность\r\n                    let isSelect = currentCargoTypes.find((itemX) => {\r\n                      return itemX.id === item.id;\r\n                    });\r\n\r\n                    return (\r\n                      <div key={index} className=\"col box-grooz-wrapper\">\r\n                        <div\r\n                          className={`box-grooz ${isSelect ? \"active\" : \"\"}`}\r\n                          onClick={() => {\r\n                            this.onChangeTypesByOne(item);\r\n                          }}\r\n                        >\r\n                          <div className=\"text-center\">\r\n                            <img src={item.img} alt=\"box\" />\r\n                            <span className=\"d-block\">{item.name}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })}\r\n              </>\r\n            )}\r\n            {this.state.isPro && (\r\n              <Select\r\n                placeholder=\"Тип Груза\"\r\n                options={this.state.cargoListPossible.map((item) => {\r\n                  return {\r\n                    value: item.id,\r\n                    label: item.name,\r\n                  };\r\n                })}\r\n                isMulti={true}\r\n                className=\"selectTypeCargo\"\r\n                value={currentCargoTypes.map((item) => {\r\n                  return {\r\n                    value: item.id,\r\n                    label: item.name,\r\n                  };\r\n                })}\r\n                onChange={(val) => {\r\n                  this.onChangeTypesByMore(val);\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"row typeGrooz\">\r\n            {(currentCargoTypes.find((item) => item.isStandart) ||\r\n              (this.state.cargoData.find((itemX) => itemX.typeID === 4) &&\r\n                this.state.cargoData.find((itemX) => itemX.typeID === 4)[\r\n                  \"type\"\r\n                ] === \"Обычные\") ||\r\n              (this.state.cargoData.find((itemX) => itemX.typeID === 13) &&\r\n                this.state.cargoData.find((itemX) => itemX.typeID === 13)[\r\n                  \"type\"\r\n                ] === \"Обычные\") ||\r\n              (this.state.cargoData.find((itemX) => itemX.typeID === 3) &&\r\n                this.state.cargoData.find((itemX) => itemX.typeID === 3)[\r\n                  \"type\"\r\n                ] === \"Обычные\")) && (\r\n              <StandartParams\r\n                cargoStandartData={this.state.cargoStandartData}\r\n                needCube={false}\r\n                onChangeCargoStandartData={this.onChangeCargoStandartData}\r\n              />\r\n            )}\r\n            {!!currentCargoTypes.length &&\r\n              currentCargoTypes.map((item, index) => {\r\n                if (item.fields)\r\n                  return (\r\n                    <div key={index} className=\"rowParams\">\r\n                      <h4\r\n                        className=\"f-16 col-12 mb-1\"\r\n                        style={{\r\n                          fontWeight: \"normal\",\r\n                        }}\r\n                      >\r\n                        <div className=\"typeName\">{item.name}</div>Параметры\r\n                        одного места и количество мест\r\n                      </h4>\r\n                      <div className=\"moreParams\">\r\n                        {item.fields(\r\n                          this.onChangeCargoData,\r\n                          this.state.cargoData.find(\r\n                            (itemX) => itemX.typeID === item.id\r\n                          ) || [],\r\n                          this.props.typesCar\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                else return false;\r\n              })}\r\n          </div>\r\n          <div className=\"row slide-step justify-content-end\">\r\n            <Button\r\n              type=\"empty\"\r\n              className=\" input-action\"\r\n              paddingHorizontal=\"40px\"\r\n              onClick={this.props.prev}\r\n            >\r\n              Назад\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"fill\"\r\n              className=\" input-action\"\r\n              paddingHorizontal=\"40px\"\r\n              onClick={this.props.next}\r\n            >\r\n              Вперед\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default OfferCreate3;\r\n","// App\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HeaderCreate from \"./CreatePart/HeaderCreate\";\r\nimport OfferCreate1 from \"./CreatePart/Offer1\";\r\nimport OfferCreate2 from \"./CreatePart/Offer2\";\r\nimport OfferCreate3 from \"./CreatePart/Offer3\";\r\nimport OfferCreate4 from \"./CreatePart/Offer&Order4\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport api from \"../../config/api\";\r\nimport { setForceTitle } from \"../../functions/functions\";\r\nimport Loading from \"../../Elements/Loading\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport NoMatch from \"../NoMatch\";\r\nclass OfferCreate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.article = {};\r\n  }\r\n  state = {\r\n    isFetching: true,\r\n    notFound: false,\r\n    currentTab: 1,\r\n    typesCar: [],\r\n    carTemplates: [],\r\n    article: false,\r\n    isEditing: false,\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.user.type === \"cargo\")\r\n      this.setState({ notFound: true, isFetching: false });\r\n    else if (this.props.match.params.id)\r\n      fetch(`${api.urlApi}/api/article/getUserArticle`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.props.user.apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          id: this.props.match.params.id,\r\n          type: \"offer\",\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.error) {\r\n            if (data.article) {\r\n              this.article = data.article;\r\n              this.editingId = data.article._id;\r\n              this.setState(\r\n                {\r\n                  typesCar: data.article.car.typesCar,\r\n                  isEditing: true,\r\n                },\r\n                () => {\r\n                  setForceTitle(\r\n                    (this.state.article.type === \"offer\"\r\n                      ? \"Редактирование предложения\"\r\n                      : \"Редактирование заказа\") +\r\n                      \" №\" +\r\n                      this.article.articleId\r\n                  );\r\n                  this.getCarTemplate();\r\n                }\r\n              );\r\n            }\r\n          } else this.setState({ notFound: true, isFetching: false });\r\n        });\r\n    else this.getCarTemplate();\r\n  }\r\n  getCarTemplate() {\r\n    fetch(`${api.urlApi}/api/car/getCarTemplates`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (!data.error) {\r\n          if (data.carTemplates) {\r\n            this.setState({\r\n              carTemplates: data.carTemplates,\r\n              isFetching: false,\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n  getRef(number) {\r\n    switch (number) {\r\n      case 1:\r\n        return this.step1;\r\n      case 2:\r\n        return this.step2;\r\n      case 3:\r\n        return this.step3;\r\n    }\r\n  }\r\n  nexTab(number) {\r\n    let error = false;\r\n    let data;\r\n    let article = { type: \"offer\" };\r\n    Array.from(Array(number - 1), (_, i) => i + 1).map((item, index) => {\r\n      if ((data = this.getRef(item).getArticlesInfo()))\r\n        article = {\r\n          ...article,\r\n          ...data,\r\n        };\r\n      else error = index + 1;\r\n    });\r\n    if (!error) {\r\n      if (number === 4) {\r\n        this.setState(\r\n          { article: { ...article, author: this.props.user } },\r\n          () => {\r\n            this.setState({ currentTab: number });\r\n          }\r\n        );\r\n      } else {\r\n        let state = { currentTab: number };\r\n        this.setState({ ...state });\r\n      }\r\n    } else if (this.state.currentTab !== error)\r\n      this.setState({ currentTab: error });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Loading isLoading={this.state.isFetching}></Loading>\r\n        <div className=\"create-page create-order-page\">\r\n          <CSSTransitionGroup\r\n            transitionName=\"loading-height-animation-item\"\r\n            transitionEnterTimeout={300}\r\n            transitionLeaveTimeout={300}\r\n            style={{\r\n              display: \"contents\",\r\n            }}\r\n          >\r\n            {!this.state.isFetching && !this.state.notFound && (\r\n              <>\r\n                <div className=\"container-fluid\">\r\n                  <h2 className=\"title\">{this.props.title}</h2>\r\n                  <HeaderCreate\r\n                    changeTub={(setTub) => {\r\n                      this.nexTab(setTub);\r\n                    }}\r\n                    currentTab={this.state.currentTab}\r\n                    tabs={[\r\n                      \"Описание авто\",\r\n                      \"Мартшрут\",\r\n                      \"Описание груза\",\r\n                      \"Публикация товара\",\r\n                    ]}\r\n                  />\r\n                </div>\r\n                <div className=\"steps-create\">\r\n                  <OfferCreate1\r\n                    ref={(ref) => (this.step1 = ref)}\r\n                    className={`${this.state.currentTab === 1 ? \"active\" : \"\"} \r\n              ${this.state.currentTab > 1 ? \"deactive\" : \"\"}`}\r\n                    car={this.article.car}\r\n                    next={() => {\r\n                      this.nexTab(2);\r\n                    }}\r\n                    user={this.props.user}\r\n                    carTemplates={this.state.carTemplates}\r\n                    onChange={(state) => {\r\n                      this.setState(state);\r\n                    }}\r\n                    comment={this.article.comment}\r\n                    budget={this.article.budget}\r\n                  />\r\n                  <OfferCreate2\r\n                    ref={(ref) => (this.step2 = ref)}\r\n                    className={`${\r\n                      this.state.currentTab === 2 ? \"active\" : \"\"\r\n                    } ${this.state.currentTab > 2 ? \"deactive\" : \"\"}`}\r\n                    next={() => {\r\n                      this.nexTab(3);\r\n                    }}\r\n                    prev={() => {\r\n                      this.setState({\r\n                        currentTab: this.state.currentTab - 1,\r\n                      });\r\n                    }}\r\n                    addressFrom={this.article.from}\r\n                    addressTo={this.article.to}\r\n                    startDate={this.article.startDate}\r\n                  />\r\n                  <OfferCreate3\r\n                    ref={(ref) => (this.step3 = ref)}\r\n                    className={`${\r\n                      this.state.currentTab === 3 ? \"active\" : \"\"\r\n                    } ${this.state.currentTab > 3 ? \"deactive\" : \"\"}`}\r\n                    typesCar={this.state.typesCar}\r\n                    next={() => {\r\n                      this.nexTab(4);\r\n                    }}\r\n                    prev={() => {\r\n                      this.setState({\r\n                        currentTab: this.state.currentTab - 1,\r\n                      });\r\n                    }}\r\n                    cargoTypes={this.article.cargoTypes}\r\n                    cargoData={this.article.cargoData}\r\n                    cargoStandartData={this.article.cargoStandartData}\r\n                  />\r\n\r\n                  <OfferCreate4\r\n                    key=\"OfferCreate4\"\r\n                    className={`${this.state.currentTab === 4 ? \"active\" : \"\"}`}\r\n                    prev={() => {\r\n                      this.setState({\r\n                        currentTab: this.state.currentTab - 1,\r\n                      });\r\n                    }}\r\n                    isEditing={this.state.isEditing}\r\n                    editingId={this.editingId}\r\n                    article={this.state.article}\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n          </CSSTransitionGroup>\r\n          {!this.state.isFething && this.state.notFound && <NoMatch />}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(OfferCreate));\r\n"],"sourceRoot":""}