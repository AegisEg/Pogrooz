{"version":3,"sources":["redux/actions/reviews.js","Pages/User/Reviwes.js"],"names":["reviewsGet","type","apiToken","dispatch","REVIEWS_ME_SET_LOADING","payload","REVIEWS_MY_SET_LOADING","fetch","api","urlApi","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","reviews","REVIEWS_ME_GET","REVIEWS_MY_GET","reviewsLoad","lastReviewId","store","getState","reviewsMe","length","_id","reviewsMy","REVIEWS_ME_LOAD","REVIEWS_MY_LOAD","saveReview","review","article","userId","Promise","resolve","reject","orderId","socketId","SocketController","getSocketId","data","error","errors","map","item","toast","msg","newReview","author","ARTICLE_MY_REVIEW_UPDATE","REVIEWS_MY_UPDATE","ARTICLE_TAKING_REVIEW_UPDATE","REVIEWS_ME_UPDATE","Reviews","state","currentStatus","this","props","isGetted","reviewsAction","user","canLoad","isFetching","reviewsBlock","getScrollHeight","getScrollTop","getClientHeight","reviewsObj","className","onClick","setState","Loading","isLoading","LoadingFixed","transitionName","transitionEnterTimeout","transitionLeaveTimeout","style","display","onScroll","ref","renderTrackVertical","renderThumbVertical","autoHide","index","key","onChange","rating","comment","order","isLast","isMy","React","Component","connect","bindActionCreators"],"mappings":"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","file":"static/js/18.454565ee.chunk.js","sourcesContent":["import {\r\n  REVIEWS_MY_GET,\r\n  REVIEWS_ME_GET,\r\n  REVIEWS_ME_LOAD,\r\n  REVIEWS_MY_LOAD,\r\n  REVIEWS_MY_SET_LOADING,\r\n  REVIEWS_ME_SET_LOADING,\r\n  ARTICLE_MY_REVIEW_UPDATE,\r\n  REVIEWS_MY_UPDATE,\r\n  ARTICLE_MY_REVIEW_CREATE,\r\n  REVIEWS_MY_CREATE,\r\n  ARTICLE_TAKING_REVIEW_UPDATE,\r\n  REVIEWS_ME_UPDATE,\r\n  ARTICLE_TAKING_REVIEW_CREATE,\r\n  REVIEWS_ME_CREATE,\r\n} from \"../constants\";\r\n\r\nimport api from \"../../config/api\";\r\nimport store from \"../store\";\r\nimport { toast } from \"react-toastify\";\r\nimport SocketController from \"../../controllers/SocketController\";\r\nexport const reviewsGet = (type, apiToken) => (dispatch) => {\r\n  if (type === \"me\") dispatch({ type: REVIEWS_ME_SET_LOADING, payload: {} });\r\n  if (type === \"my\") dispatch({ type: REVIEWS_MY_SET_LOADING, payload: {} });\r\n  fetch(`${api.urlApi}/api/article/getMyReviews`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${apiToken}`,\r\n    },\r\n    body: JSON.stringify({\r\n      type: type,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(({ reviews }) => {\r\n      if (type === \"me\")\r\n        dispatch({\r\n          type: REVIEWS_ME_GET,\r\n          payload: { reviews },\r\n        });\r\n      if (type === \"my\")\r\n        dispatch({\r\n          type: REVIEWS_MY_GET,\r\n          payload: { reviews },\r\n        });\r\n    });\r\n};\r\nexport const reviewsLoad = (type, apiToken) => (dispatch) => {\r\n  let lastReviewId;\r\n\r\n  if (type === \"me\") {\r\n    lastReviewId = store.getState().reviews.reviewsMe.reviews[\r\n      store.getState().reviews.reviewsMe.reviews.length - 1\r\n    ]._id;\r\n    dispatch({ type: REVIEWS_ME_SET_LOADING, payload: {} });\r\n  }\r\n  if (type === \"my\") {\r\n    lastReviewId = store.getState().reviews.reviewsMy.reviews[\r\n      store.getState().reviews.reviewsMy.reviews.length - 1\r\n    ]._id;\r\n    dispatch({ type: REVIEWS_MY_SET_LOADING, payload: {} });\r\n  }\r\n  fetch(`${api.urlApi}/api/article/getMyReviews`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${apiToken}`,\r\n    },\r\n    body: JSON.stringify({\r\n      type: type,\r\n      lastReviewId,\r\n    }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(({ reviews }) => {\r\n      if (type === \"me\")\r\n        dispatch({\r\n          type: REVIEWS_ME_LOAD,\r\n          payload: { reviews },\r\n        });\r\n      if (type === \"my\")\r\n        dispatch({\r\n          type: REVIEWS_MY_LOAD,\r\n          payload: { reviews },\r\n        });\r\n    });\r\n};\r\nexport const saveReview = (review, article, userId, apiToken) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (apiToken) {\r\n      fetch(`${api.urlApi}/api/article/saveReview`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          review: review,\r\n          orderId: article._id,\r\n          userId: userId,\r\n          socketId: SocketController.getSocketId(),\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.error)\r\n            data.errors.map((item) => {\r\n              toast.error(item.msg);\r\n            });\r\n          if (!data.error && data.newReview) {\r\n            if (article.author._id === data.newReview.author._id) {\r\n              dispatch({\r\n                type: ARTICLE_MY_REVIEW_UPDATE,\r\n                payload: {\r\n                  article,\r\n                  newReview: data.newReview,\r\n                },\r\n              });\r\n              dispatch({\r\n                type: REVIEWS_MY_UPDATE,\r\n                payload: {\r\n                  review: data.newReview,\r\n                },\r\n              });\r\n            } else {\r\n              dispatch({\r\n                type: ARTICLE_TAKING_REVIEW_UPDATE,\r\n                payload: {\r\n                  article,\r\n                  newReview: data.newReview,\r\n                },\r\n              });\r\n              dispatch({\r\n                type: REVIEWS_ME_UPDATE,\r\n                payload: {\r\n                  review: data.newReview,\r\n                },\r\n              });\r\n            }\r\n          }\r\n          resolve(data);\r\n        });\r\n    } else resolve({});\r\n  });\r\n};\r\n","// App\r\nimport React from \"react\";\r\n// Router\r\nimport { connect } from \"react-redux\";\r\nimport * as reviewsAction from \"../../redux/actions/reviews\";\r\nimport { bindActionCreators } from \"redux\";\r\n// Elements\r\nimport Loading from \"../../Elements/Loading\";\r\nimport LoadingFixed from \"../../Elements/LoadingFixed\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport ReviewItem from \"../../Partials/ReviewsItem\";\r\nclass Reviews extends React.Component {\r\n  state = {\r\n    currentStatus: 0,\r\n  };\r\n  //my Я автор\r\n  //me Мне написали\r\n  componentDidMount() {\r\n    if (!this.props.reviews.reviewsMe.isGetted)\r\n      this.props.reviewsAction.reviewsGet(\"me\", this.props.user.apiToken);\r\n  }\r\n  onScroll() {\r\n    if (\r\n      this.state.currentStatus === 0 &&\r\n      this.props.reviews.reviewsMe.canLoad &&\r\n      !this.props.reviews.reviewsMe.isFetching &&\r\n      this.reviewsBlock.getScrollHeight() - this.reviewsBlock.getScrollTop() <=\r\n        200 + this.reviewsBlock.getClientHeight()\r\n    ) {\r\n      this.props.reviewsAction.reviewsLoad(\"me\", this.props.user.apiToken);\r\n    }\r\n    if (\r\n      this.state.currentStatus === 1 &&\r\n      this.props.reviews.reviewsMy.canLoad &&\r\n      !this.props.reviews.reviewsMy.isFetching &&\r\n      this.reviewsBlock.getScrollHeight() - this.reviewsBlock.getScrollTop() <=\r\n        200 + this.reviewsBlock.getClientHeight()\r\n    ) {\r\n      this.props.reviewsAction.reviewsLoad(\"my\", this.props.user.apiToken);\r\n    }\r\n  }\r\n  render() {\r\n    let reviewsObj =\r\n      this.state.currentStatus === 0\r\n        ? this.props.reviews.reviewsMe\r\n        : this.props.reviews.reviewsMy;\r\n    return (\r\n      <div className=\"loads-page reviews-page\">\r\n        <div className=\"container-fluid\">\r\n          <h2 className=\"title\">Отзывы</h2>\r\n          <div className=\"tab_groups\">\r\n            <span\r\n              className={`tab_group ${\r\n                this.state.currentStatus === 0 ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => {\r\n                if (!this.props.reviews.reviewsMe.isFetching)\r\n                  this.setState({ currentStatus: 0 }, () => {\r\n                    if (!this.props.reviews.reviewsMe.isGetted)\r\n                      this.props.reviewsAction.reviewsGet(\r\n                        \"me\",\r\n                        this.props.user.apiToken\r\n                      );\r\n                  });\r\n              }}\r\n            >\r\n              Обо мне\r\n            </span>\r\n            <span\r\n              className={`tab_group ${\r\n                this.state.currentStatus === 1 ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => {\r\n                if (!this.props.reviews.reviewsMy.isFetching)\r\n                  this.setState({ currentStatus: 1 }, () => {\r\n                    if (!this.props.reviews.reviewsMy.isGetted)\r\n                      this.props.reviewsAction.reviewsGet(\r\n                        \"my\",\r\n                        this.props.user.apiToken\r\n                      );\r\n                  });\r\n              }}\r\n            >\r\n              От меня\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <Loading\r\n          isLoading={!reviewsObj.isGetted && reviewsObj.isFetching}\r\n        ></Loading>\r\n        <LoadingFixed\r\n          isLoading={reviewsObj.isGetted && reviewsObj.isFetching}\r\n        ></LoadingFixed>\r\n        <CSSTransitionGroup\r\n          transitionName=\"height-animation-item\"\r\n          transitionEnterTimeout={500}\r\n          transitionLeaveTimeout={1}\r\n          style={{\r\n            display: \"contents\",\r\n          }}\r\n        >\r\n          <div className=\"articles-block full\">\r\n            <Scrollbars\r\n              onScroll={() => {\r\n                this.onScroll();\r\n              }}\r\n              ref={(ref) => {\r\n                this.reviewsBlock = ref;\r\n              }}\r\n              renderTrackVertical={(props) => (\r\n                <div className=\"track-vertical\" />\r\n              )}\r\n              renderThumbVertical={(props) => (\r\n                <div className=\"thumb-vertical\" />\r\n              )}\r\n              className=\"load-content scroll\"\r\n              autoHide\r\n            >\r\n              {(reviewsObj.isGetted || !reviewsObj.isFetching) &&\r\n                !!reviewsObj.reviews.length && (\r\n                  <>\r\n                    <div className=\"article-block requests-article-block\">\r\n                      {reviewsObj.reviews.map((item, index) => {\r\n                        return (\r\n                          <ReviewItem\r\n                            key={index}\r\n                            onChange={(rating, comment) => {\r\n                              this.props.reviewsAction.saveReview(\r\n                                {\r\n                                  _id: item._id,\r\n                                  rating,\r\n                                  comment,\r\n                                },\r\n                                item.order,\r\n                                item.user._id,\r\n                                this.props.user.apiToken\r\n                              );\r\n                            }}\r\n                            isLast={reviewsObj.reviews.length === index + 1}\r\n                            review={item}\r\n                            isMy={this.state.currentStatus === 1}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n              {reviewsObj.isGetted && !reviewsObj.reviews.length && (\r\n                <div className=\"text-center\">Отзывов пока нет</div>\r\n              )}\r\n            </Scrollbars>\r\n          </div>\r\n        </CSSTransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    reviews: state.reviews,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    reviewsAction: bindActionCreators(reviewsAction, dispatch),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reviews);\r\n"],"sourceRoot":""}