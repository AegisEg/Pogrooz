{"version":3,"sources":["Pages/User/MyArticles.js"],"names":["MyArticles","props","state","currentStatus","prestatus","this","statusArticle","length","setState","myArticlesActions","articlesMyLoad","user","apiToken","articlesAllMyGet","reduxArticles","myarticles","my","className","onClick","myAll","countAll","map","item","index","key","isGetted","articlesMyGet","articlesBlock","getScrollHeight","getScrollTop","getClientHeight","canLoad","isFetching","articlesAllMyLoad","title","renderTabs","isLoading","transitionName","transitionEnterTimeout","transitionLeaveTimeout","style","display","onScroll","ref","renderTrackVertical","renderThumbVertical","autoHide","articles","article","i","IsManage","React","Component","connect","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/14.78df89d0.chunk.js","sourcesContent":["// App\r\nimport React from \"react\";\r\n// Elements\r\nimport Article from \"../../ArticlesElements/Article\";\r\nimport ArticleHeader from \"../../ArticlesElements/Partials/ArticleHeader\";\r\nimport LoadingFixed from \"../../Elements/LoadingFixed\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport * as myArticlesActions from \"../../redux/actions/myarticles\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nclass MyArticles extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.prestatus = 1;\r\n  }\r\n  state = {\r\n    currentStatus: \"all\",\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.statusArticle.length === 1)\r\n      this.setState({ currentStatus: this.props.statusArticle[0] }, () => {\r\n        this.props.myArticlesActions.articlesMyLoad(\r\n          this.state.currentStatus,\r\n          this.props.user.apiToken\r\n        );\r\n      });\r\n    else\r\n      this.props.myArticlesActions.articlesAllMyGet(this.props.user.apiToken);\r\n  }\r\n  renderTabs() {\r\n    let reduxArticles = this.props.myarticles.my;\r\n    return (\r\n      <div className=\"tab_groups\">\r\n        {this.props.statusArticle.length > 1 && (\r\n          <span\r\n            className={`tab_group ${\r\n              this.state.currentStatus === \"all\" ? \"active\" : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              this.setState({ currentStatus: \"all\" });\r\n            }}\r\n          >\r\n            Все &nbsp;\r\n            {this.props.myarticles.myAll.countAll}\r\n          </span>\r\n        )}\r\n        {this.props.statusArticle.map((item, index) => {\r\n          return (\r\n            <span\r\n              key={index}\r\n              className={`tab_group ${\r\n                this.state.currentStatus === item ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => {\r\n                this.setState({ currentStatus: item }, () => {\r\n                  if (\r\n                    !reduxArticles[this.state.currentStatus - this.prestatus]\r\n                      .isGetted\r\n                  ) {\r\n                    this.props.myArticlesActions.articlesMyGet(\r\n                      this.state.currentStatus,\r\n                      this.props.user.apiToken\r\n                    );\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              {item === 1 && \"Черновики\"}\r\n              {item === 2 && \"Открытые\"}\r\n              {item === 3 && \"Выбран исполнитель\"}\r\n              {item === 4 && \"В пути\"}\r\n              {item === 5 && \"Выполненные\"}\r\n              {item === 6 && \"Отмененные\"}\r\n              {item === 7 && \"Корзина\"}\r\n              &nbsp;{this.props.myarticles.my[item - 1].countAll}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  onScroll() {\r\n    if (\r\n      this.articlesBlock.getScrollHeight() -\r\n        this.articlesBlock.getScrollTop() <=\r\n      200 + this.articlesBlock.getClientHeight()\r\n    )\r\n      if (this.state.currentStatus !== \"all\") {\r\n        let reduxArticles = this.props.myarticles.my;\r\n        if (\r\n          reduxArticles[this.state.currentStatus - this.prestatus].canLoad &&\r\n          !reduxArticles[this.state.currentStatus - this.prestatus].isFetching\r\n        ) {\r\n          this.props.myArticlesActions.articlesMyLoad(\r\n            this.state.currentStatus,\r\n            this.props.user.apiToken\r\n          );\r\n        }\r\n      } else {\r\n        if (\r\n          this.props.myarticles.myAll.canLoad &&\r\n          !this.props.myarticles.myAll.isFetching\r\n        )\r\n          this.props.myArticlesActions.articlesAllMyLoad(\r\n            this.props.user.apiToken\r\n          );\r\n      }\r\n  }\r\n  render() {\r\n    let reduxArticles;\r\n    if (this.state.currentStatus === \"all\")\r\n      reduxArticles = this.props.myarticles.myAll;\r\n    else reduxArticles = this.props.myarticles.my[this.state.currentStatus - 1];\r\n    return (\r\n      <div className=\"lk-order-page\">\r\n        <div className=\"container-fluid\">\r\n          <h2 className=\"title\">{this.props.title}</h2>\r\n          {this.renderTabs()}\r\n        </div>\r\n        <div className=\"articles-block\">\r\n          <ArticleHeader></ArticleHeader>\r\n          <LoadingFixed isLoading={reduxArticles.isFetching}></LoadingFixed>\r\n          <CSSTransitionGroup\r\n            transitionName=\"height-animation-item\"\r\n            transitionEnterTimeout={500}\r\n            transitionLeaveTimeout={1}\r\n            style={{\r\n              display: \"contents\",\r\n            }}\r\n          >\r\n            <Scrollbars\r\n              onScroll={() => {\r\n                this.onScroll();\r\n              }}\r\n              ref={(ref) => {\r\n                this.articlesBlock = ref;\r\n              }}\r\n              renderTrackVertical={(props) => (\r\n                <div className=\"track-vertical\" />\r\n              )}\r\n              renderThumbVertical={(props) => (\r\n                <div className=\"thumb-vertical\" />\r\n              )}\r\n              className=\"load-content scroll\"\r\n              autoHide\r\n            >\r\n              {(!reduxArticles.isFetching || reduxArticles.isGetted) && (\r\n                <>\r\n                  {reduxArticles.articles &&\r\n                    reduxArticles.articles.map((article, i) => {\r\n                      return (\r\n                        <Article IsManage={true} key={i} article={article} />\r\n                      );\r\n                    })}\r\n                  {(!reduxArticles.isFetching || reduxArticles.isGetted) &&\r\n                    reduxArticles.articles &&\r\n                    !reduxArticles.articles.length && (\r\n                      <div className=\"text-center py-3\">Записей не найдено</div>\r\n                    )}\r\n                </>\r\n              )}\r\n            </Scrollbars>\r\n          </CSSTransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    myarticles: state.myarticles,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    myArticlesActions: bindActionCreators(myArticlesActions, dispatch),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyArticles);\r\n"],"sourceRoot":""}