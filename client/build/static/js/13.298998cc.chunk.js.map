{"version":3,"sources":["Pages/User/Messages/DialogOrder.js"],"names":["Messages","state","isFetching","dialogs","this","props","dialogsOrder","find","dialog","user","_id","match","params","id","orderId","order","dialogsActions","updateOnline","apiToken","isGetted","dialogOrderLoad","setState","dialogOrderGet","then","isLoading","isNotFound","className","to","style","maxWidth","marginLeft","onClick","e","preventDefault","lastLocation","history","push","pathname","name","last","first","middle","online","OnlineDate","onlineAt","type","articleId","data","country","value","src","ArrowDown","width","height","alt","unRead","messages","filter","x","isRead","loading","React","Component","connect","dispatch","bindActionCreators","withRouter","withLastLocation"],"mappings":"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","file":"static/js/13.298998cc.chunk.js","sourcesContent":["// App\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chat from \"../../../Partials/Chat/Dialog\";\r\nimport NoMatch from \"../../NoMatch\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withLastLocation } from \"react-router-last-location\";\r\nimport * as dialogsActions from \"../../../redux/actions/dialogs\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { OnlineDate } from \"../../../controllers/TimeController\";\r\nimport ArrowDown from \"../../../img/arrowDownperple.svg\";\r\nimport Loading from \"../../../Elements/Loading\";\r\nclass Messages extends React.Component {\r\n  state = {\r\n    isFetching: true,\r\n  };\r\n  componentDidMount() {\r\n    let dialogs = this.props.dialogs.dialogsOrder;\r\n    if (\r\n      !dialogs.dialogs.find(\r\n        (dialog) =>\r\n          dialog.user._id === this.props.match.params.id &&\r\n          dialog.orderId._id === this.props.match.params.order\r\n      )\r\n    ) {\r\n      this.props.dialogsActions\r\n        .dialogOrderGet(\r\n          this.props.match.params.id,\r\n          this.props.match.params.order,\r\n          this.props.user.apiToken\r\n        )\r\n        .then(() => {\r\n          this.setState({ isFetching: false });\r\n        });\r\n    } else {\r\n      this.props.dialogsActions.updateOnline(\r\n        this.props.match.params.id,\r\n        this.props.user.apiToken\r\n      );\r\n      if (\r\n        !dialogs.dialogs.find(\r\n          (dialog) =>\r\n            dialog.user._id === this.props.match.params.id &&\r\n            dialog.orderId._id === this.props.match.params.order\r\n        ).isGetted\r\n      )\r\n        this.props.dialogsActions.dialogOrderLoad(\r\n          this.props.match.params.id,\r\n          this.props.match.params.order,\r\n          this.props.user.apiToken\r\n        );\r\n      this.setState({ isFetching: false });\r\n    }\r\n  }\r\n  render() {\r\n    let dialog = this.props.dialogs.dialogsOrder.dialogs.find(\r\n      (dialog) => dialog.user._id === this.props.match.params.id\r\n    );\r\n    return (\r\n      <>\r\n        <Loading isLoading={this.state.isFetching} />\r\n        {dialog && !dialog.isNotFound && (\r\n          <div className=\"article-page\">\r\n            <div className=\"container-fluid\">\r\n              <h2 className=\"title\">Сообщения</h2>\r\n              <div className=\"chat-header mt-3\">\r\n                <div className=\"mb-1\">\r\n                  <Link\r\n                    className=\"href hover left-angle f-14 angle-go\"\r\n                    to=\"/\"\r\n                    style={{\r\n                      maxWidth: \"50px\",\r\n                      marginLeft: \"20px\",\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      if (this.props.lastLocation) {\r\n                        this.props.history.push(\r\n                          this.props.lastLocation.pathname\r\n                        );\r\n                      } else {\r\n                        this.props.history.push(\"/messages\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    Назад\r\n                  </Link>\r\n                  <span className=\"d-inline-block f-18 text-left mr-3\">\r\n                    {dialog.user.name.last} {dialog.user.name.first}{\" \"}\r\n                    {dialog.user.name.middle}\r\n                  </span>\r\n                  <span className=\"online\">\r\n                    {!dialog.user.online && (\r\n                      <>{OnlineDate(dialog.user.onlineAt)}</>\r\n                    )}\r\n                    {dialog.user.online && <>online</>}\r\n                  </span>\r\n                </div>\r\n                <div className=\"row description-chat\">\r\n                  <div\r\n                    className=\"col f-14\"\r\n                    style={{\r\n                      maxWidth: \"135px\",\r\n                    }}\r\n                  >\r\n                    {dialog.orderId.type === \"offer\" ? \"Предложение\" : \"Заказ\"}№\r\n                    {dialog.orderId.articleId}\r\n                  </div>\r\n                  <div className=\"col-12 col-sm f-14\">\r\n                    {dialog.orderId.to.data.country}, {dialog.orderId.to.value}\r\n                  </div>\r\n                  <div\r\n                    className=\"col\"\r\n                    style={{\r\n                      maxWidth: \"128px\",\r\n                    }}\r\n                  >\r\n                    <Link\r\n                      className=\"f-12 href\"\r\n                      to={`/${dialog.orderId.type}/${dialog.orderId.articleId}`}\r\n                    >\r\n                      Открыть\r\n                      <img\r\n                        className=\"ml-2\"\r\n                        src={ArrowDown}\r\n                        width=\"10\"\r\n                        height=\"7\"\r\n                        alt=\"ArrowDown\"\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n            <Chat\r\n              unRead={dialog.messages.filter(\r\n                (x) => !x.isRead && x.user._id !== this.props.user._id\r\n              )}\r\n              loading={dialog && !dialog.isGetted}\r\n              dialog={dialog}\r\n            />\r\n          </div>\r\n        )}\r\n        {!this.state.isFetching && (!dialog || dialog.isNotFound) && (\r\n          <NoMatch />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    dialogs: state.dialogs,\r\n  };\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(withLastLocation(Messages)));\r\n"],"sourceRoot":""}