{"version":3,"sources":["Elements/CheckBoxSwitcher.js","Elements/CarSelect.js","Pages/User/CreatePart/CreateTemplateAuto.js"],"names":["CheckBoxSwitcher","className","this","props","val","onClick","onChange","lable","lableClassname","React","Component","CarSelect","loadOptions","inputValue","callback","setTimeout","fetch","api","urlApi","method","headers","Accept","Authorization","apiToken","body","JSON","stringify","stringLikes","then","response","json","data","cars","map","item","value","name","label","handleBlur","event","preventDefault","async","placeholder","onBlur","onInputChange","action","OfferCreate1","state","isExtra","isContract","isPayment","notFound","isEditing","car","isFetching","isFetchingAction","editTemplate","getArticlesInfo","formData","FormData","append","editingId","photo","file","setState","user","error","errors","toast","msg","position","POSITION","TOP_CENTER","history","push","saveTemplate","isError","typesCar","length","contractInfo","find","id","org","prop","info","property","onChangeParams","isSingle","filter","index","onChangeParamsFiels","idProp","onChangeCarData","carId","carDataX","match","params","templateId","Template","_id","defaultInitializate","setForceTitle","newState","additionally","paymentInfo","array","element","itemX","currentCarType","carTypesList","currentInfo","isLoading","title","style","fontWeight","options","type","min","capacity","e","target","display","awning","text","typeGazel","marginBottom","files","size","path","URL","createObjectURL","accept","hidden","document","getElementById","click","src","alt","transitionName","transitionEnterTimeout","transitionLeaveTimeout","extraParams","key","additionFields","itemField","field","getIfExit","contractParams","paymentParams","paddingHorizontal","isFething","connect","withRouter"],"mappings":"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","file":"static/js/7.53da2e5a.chunk.js","sourcesContent":["// App\r\nimport React from \"react\";\r\n\r\nclass CheckBoxSwitcher extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className={`CheckBoxSwitcher ${this.props.className} ${\r\n            this.props.val ? \"checked\" : \"\"\r\n          }`}\r\n          onClick={this.props.onChange ? this.props.onChange : () => {}}\r\n        ></div>\r\n        {this.props.lable && (\r\n          <label\r\n            className={this.props.lableClassname}\r\n            onClick={this.props.onChange ? this.props.onChange : () => {}}\r\n          >\r\n            {this.props.lable}\r\n          </label>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckBoxSwitcher;\r\n","import React from \"react\";\r\nimport Select from \"./Select\";\r\nimport api from \"../config/api\";\r\n\r\nclass CarSelect extends React.Component {\r\n  loadOptions = (inputValue, callback) => {\r\n    setTimeout(() => {\r\n      fetch(`${api.urlApi}/api/car/getLikeCars`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.props.apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          stringLikes: inputValue,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          callback(\r\n            data.cars.map((item) => ({ value: item.name, label: item.name }))\r\n          );\r\n        });\r\n    }, 1000);\r\n  };\r\n  handleBlur = (event) => {\r\n    const inputValue = this.props.value;\r\n    if (!inputValue) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Select\r\n        async={true}\r\n        className=\"carSelect\"\r\n        placeholder=\"Марка, модель\"\r\n        loadOptions={this.loadOptions}\r\n        value={\r\n          this.props.value\r\n            ? { value: this.props.value, label: this.props.value }\r\n            : false\r\n        }\r\n        onChange={this.props.onChange}\r\n        inputValue={this.props.value}\r\n        onBlur={this.handleBlur}\r\n        onInputChange={(val, { action }) => {\r\n          if (action === \"input-change\")\r\n            this.props.onChange({ value: val, label: val });\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default CarSelect;\r\n","import React from \"react\";\r\nimport Button from \"../../../Elements/Button\";\r\nimport LoadingFixed from \"../../../Elements/LoadingFixed\";\r\nimport Loading from \"../../../Elements/Loading\";\r\nimport Input from \"../../../Elements/Input\";\r\nimport Select from \"../../../Elements/Select\";\r\nimport CheckBox from \"../../../Elements/CheckBox\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CheckBoxSwitcher from \"../../../Elements/CheckBoxSwitcher\";\r\nimport CarSelect from \"../../../Elements/CarSelect\";\r\nimport { setForceTitle } from \"../../../functions/functions\";\r\nimport { CSSTransitionGroup } from \"react-transition-group\";\r\nimport { toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\n//Configs\r\nimport {\r\n  extraParams,\r\n  contractParams,\r\n  paymentParams,\r\n} from \"../../../config/baseInfo/carParams\";\r\nimport carTypesList from \"../../../config/baseInfo/carTypesList\";\r\nimport api from \"../../../config/api\";\r\nimport NoMatch from \"../../NoMatch\";\r\n//Configs\r\nclass OfferCreate1 extends React.Component {\r\n  state = {\r\n    isExtra: false,\r\n    isContract: false,\r\n    isPayment: false,\r\n    //Step1\r\n    notFound: false,\r\n    isEditing: false,\r\n    car: {},\r\n    isFetching: true,\r\n    isFetchingAction: false,\r\n  };\r\n  editTemplate = () => {\r\n    let car = this.getArticlesInfo();\r\n    if (car) {\r\n      let formData = new FormData();\r\n      formData.append(\"car\", JSON.stringify(car));\r\n      formData.append(\"templateId\", this.editingId);\r\n      if (car.photo.file) formData.append(\"carPhoto\", car.photo.file);\r\n      this.setState({ isFetchingAction: true }, () => {\r\n        fetch(`${api.urlApi}/api/car/updateCarTemplate`, {\r\n          method: \"post\",\r\n          headers: {\r\n            Authorization: `Bearer ${this.props.user.apiToken}`,\r\n          },\r\n          body: formData,\r\n        })\r\n          .then((data) => data.json())\r\n          .then((data) => {\r\n            if (data.error)\r\n              data.errors.map((item) => {\r\n                toast.error(item.msg, { position: toast.POSITION.TOP_CENTER });\r\n              });\r\n            else {\r\n              this.props.history.push(\"/mytemplate-auto\");\r\n            }\r\n          });\r\n      });\r\n    }\r\n  };\r\n  saveTemplate = () => {\r\n    let car = this.getArticlesInfo();\r\n    if (car) {\r\n      let formData = new FormData();\r\n      formData.append(\"car\", JSON.stringify(car));\r\n      formData.append(\"carPhoto\", car.photo.file);\r\n      fetch(`${api.urlApi}/api/car/createCarTemplate`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Authorization: `Bearer ${this.props.user.apiToken}`,\r\n        },\r\n        body: formData,\r\n      })\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          if (data.error)\r\n            data.errors.map((item) => {\r\n              toast.error(item.msg, { position: toast.POSITION.TOP_CENTER });\r\n            });\r\n          else {\r\n            this.props.history.push(\"/mytemplate-auto\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n  getArticlesInfo = () => {\r\n    let errorArr = {};\r\n    let isError = false;\r\n    if (!this.state.car.typesCar || !this.state.car.typesCar.length) {\r\n      toast.error(\"Выберите тип машины\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (!this.state.car.name) {\r\n      toast.error(\"Выберите марку и модель машины\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (!this.state.car.photo) {\r\n      toast.error(\"Выберите Фото машины\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (\r\n      this.state.car.contractInfo.find((item) => {\r\n        return (item.id === 2 || item.id === 3) && !item.org;\r\n      })\r\n    ) {\r\n      toast.error(\"Выберете организацию\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      isError = true;\r\n    }\r\n    if (isError) {\r\n      return false;\r\n    } else return this.state.car;\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.match.params.id)\r\n      fetch(`${api.urlApi}/api/car/getCarTemplate`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${this.props.user.apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          templateId: this.props.match.params.id,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (!data.error) {\r\n            if (data.Template) {\r\n              this.editingId = data.Template._id;\r\n              this.defaultInitializate(data.Template.car, () => {\r\n                this.setState(\r\n                  {\r\n                    isFetching: false,\r\n                    isEditing: true,\r\n                  },\r\n                  () => {\r\n                    setForceTitle(\r\n                      \"Редактирование шаблона №\" + data.Template.car.name\r\n                    );\r\n                  }\r\n                );\r\n              });\r\n            }\r\n          } else this.setState({ notFound: true, isFetching: false });\r\n        });\r\n    else {\r\n      this.defaultInitializate({}, () => {\r\n        this.setState({\r\n          isFetching: false,\r\n        });\r\n      });\r\n    }\r\n  }\r\n  defaultInitializate(car, callback) {\r\n    let newState = {};\r\n    car = {\r\n      additionally: [],\r\n      contractInfo: [],\r\n      info: [],\r\n      property: \"\",\r\n      paymentInfo: [],\r\n      ...car,\r\n    };\r\n    newState = {\r\n      ...newState,\r\n      isExtra: !!car.additionally.length,\r\n      isContract: !!car.contractInfo && car.contractInfo.length,\r\n      isPayment: !!car.paymentInfo.length,\r\n    };\r\n    this.setState(\r\n      {\r\n        car: car,\r\n        ...newState,\r\n      },\r\n      callback\r\n    );\r\n  }\r\n  getIfExit(array, item, prop) {\r\n    let element = false;\r\n    if ((element = array.find((itemX) => itemX.id == item)))\r\n      return element[prop] ? element[prop] : \"\";\r\n    else return \"\";\r\n  }\r\n  onChange = (val, prop) => {\r\n    let car = this.state.car;\r\n    switch (prop) {\r\n      case \"carType\":\r\n        car = { ...car, typesCar: [val], info: [] };\r\n        break;\r\n      case \"carProperty\":\r\n        car = { ...car, property: val };\r\n        break;\r\n      case \"carName\":\r\n        car = { ...car, name: val };\r\n        break;\r\n      case \"carPhoto\":\r\n        car = { ...car, photo: val };\r\n        break;\r\n    }\r\n    this.setState({\r\n      car: car,\r\n    });\r\n  };\r\n  onChangeParams = (prop, val, isSingle = false) => {\r\n    let car = { ...this.state.car };\r\n    if (!isSingle) {\r\n      if (\r\n        car[prop].find((item) => {\r\n          return item.id === val;\r\n        })\r\n      ) {\r\n        car[prop] = car[prop].filter((item, index) => {\r\n          return item.id !== val;\r\n        });\r\n      } else {\r\n        car[prop].push({ id: val });\r\n      }\r\n      this.setState({\r\n        car: car,\r\n      });\r\n    } else {\r\n      car[prop] = { id: val };\r\n      this.setState({\r\n        car: car,\r\n      });\r\n    }\r\n  };\r\n  onChangeParamsFiels = (prop, idProp, name, val, isSingle = false) => {\r\n    let car = { ...this.state.car };\r\n    if (!isSingle) {\r\n      if (\r\n        car[prop].find((item) => {\r\n          return item.id === idProp;\r\n        })\r\n      ) {\r\n        car[prop] = car[prop].map((item) => {\r\n          if (item.id === idProp) {\r\n            item[name] = val;\r\n            return item;\r\n          } else return item;\r\n        });\r\n      }\r\n    } else {\r\n      car[prop][name] = val;\r\n    }\r\n    this.setState({\r\n      car: car,\r\n    });\r\n  };\r\n  onChangeCarData = (carId, prop, val) => {\r\n    let carDataX = this.state.car.info;\r\n    if (carDataX.find((item) => item.carId === carId)) {\r\n      carDataX = carDataX.map((item) => {\r\n        if (item.carId === carId) {\r\n          item[prop] = val;\r\n          return item;\r\n        } else return item;\r\n      });\r\n    } else {\r\n      carDataX.push({ carId: carId });\r\n      carDataX[carDataX.length - 1][prop] = val;\r\n    }\r\n    this.setState({ car: { ...this.state.car, info: carDataX } });\r\n  };\r\n  render() {\r\n    let currentCarType =\r\n      this.state.car.typesCar && !!this.state.car.typesCar.length\r\n        ? carTypesList.find((item) => this.state.car.typesCar[0] === item.id)\r\n        : false;\r\n    let currentInfo = {};\r\n    if (this.state.car.info)\r\n      currentInfo =\r\n        this.state.car.info.find((item) => item.carId === currentCarType.id) ||\r\n        {};\r\n    return (\r\n      <div className=\"create-page create-order-page\">\r\n        <LoadingFixed isLoading={this.state.isFetchingAction} />\r\n        <Loading isLoading={this.state.isFetching} />\r\n        {!this.state.isFetching && !this.state.notFound && (\r\n          <div className=\"container-fluid\">\r\n            <h2 className=\"title\">{this.props.title}</h2>\r\n            <div className={`step-create ${this.props.className}`}>\r\n              <div className=\"row\">\r\n                <div className=\"mt-3 col-12 col-md-8 mx-0 px-0 row carInfo\">\r\n                  <h4\r\n                    className=\"f-16 col-12 mb-1\"\r\n                    style={{\r\n                      fontWeight: \"normal\",\r\n                    }}\r\n                  >\r\n                    Тип авто\r\n                  </h4>\r\n                  <div className=\"mt-3 carType\">\r\n                    <Select\r\n                      placeholder=\"Тип  машины\"\r\n                      options={carTypesList.map((item) => {\r\n                        return {\r\n                          value: item.id,\r\n                          label: item.name,\r\n                        };\r\n                      })}\r\n                      value={\r\n                        currentCarType\r\n                          ? {\r\n                              value: currentCarType.id,\r\n                              label: currentCarType.name,\r\n                            }\r\n                          : null\r\n                      }\r\n                      onChange={(val) => {\r\n                        this.onChange(val.value, \"carType\");\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"carName mt-3\">\r\n                    <CarSelect\r\n                      value={this.state.car.name}\r\n                      apiToken={this.props.user.apiToken}\r\n                      onChange={(val) => {\r\n                        this.onChange(val.value, \"carName\");\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {currentCarType && (\r\n                    <div className=\"carMoreInfo carInfo row w-100\">\r\n                      {currentCarType.id !== 1 && (\r\n                        <div className=\"carType\">\r\n                          <div className=\"f-14 mb-2\">\r\n                            Грузоподъемность в тоннах\r\n                          </div>\r\n                          <Input\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            placeholder=\"Грузоподьемность\"\r\n                            value={currentInfo.capacity || \"\"}\r\n                            onChange={(e) => {\r\n                              this.onChangeCarData(\r\n                                currentCarType.id,\r\n                                \"capacity\",\r\n                                e.target.value\r\n                              );\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                      {currentCarType.id === 12 && (\r\n                        <div className=\"moreInfoCheckBox\">\r\n                          <div className=\"f-14 mb-2\">Тентовый</div>\r\n                          <div\r\n                            style={{\r\n                              display: \"inline-block\",\r\n                            }}\r\n                          >\r\n                            <CheckBox\r\n                              id=\"awning1\"\r\n                              name=\"awning\"\r\n                              value={\r\n                                currentInfo.awning === \"Жесткий борт\" || \"\"\r\n                              }\r\n                              onChange={() => {\r\n                                this.onChangeCarData(\r\n                                  currentCarType.id,\r\n                                  \"awning\",\r\n                                  \"Жесткий борт\"\r\n                                );\r\n                              }}\r\n                              text={\"Жесткий борт\"}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              display: \"inline-block\",\r\n                            }}\r\n                          >\r\n                            <CheckBox\r\n                              id=\"awning2\"\r\n                              name=\"awning\"\r\n                              value={\r\n                                currentInfo.awning ===\r\n                                  \"Съемная верхняя балка\" || \"\"\r\n                              }\r\n                              onChange={() => {\r\n                                this.onChangeCarData(\r\n                                  currentCarType.id,\r\n                                  \"awning\",\r\n                                  \"Съемная верхняя балка\"\r\n                                );\r\n                              }}\r\n                              text={\"Съемная верхняя балка\"}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              display: \"inline-block\",\r\n                            }}\r\n                          >\r\n                            <CheckBox\r\n                              id=\"awning3\"\r\n                              name=\"awning\"\r\n                              value={\r\n                                (currentInfo &&\r\n                                  currentInfo.awning ===\r\n                                    \"Съемная боковая стойка\") ||\r\n                                \"\"\r\n                              }\r\n                              onChange={() => {\r\n                                this.onChangeCarData(\r\n                                  currentCarType.id,\r\n                                  \"awning\",\r\n                                  \"Съемная боковая стойка\"\r\n                                );\r\n                              }}\r\n                              text={\"Съемная боковая стойка\"}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      {currentCarType.id === 9 && (\r\n                        <div className=\"moreInfoCheckBox\">\r\n                          <div className=\"f-14 mb-2\">Тип</div>\r\n                          <div\r\n                            style={{\r\n                              display: \"inline-block\",\r\n                            }}\r\n                          >\r\n                            <CheckBox\r\n                              id=\"typeGazel1\"\r\n                              name=\"typeGazel\"\r\n                              value={\r\n                                currentInfo.typeGazel ===\r\n                                  \"Цельнометаллическая\" || \"\"\r\n                              }\r\n                              onChange={() => {\r\n                                this.onChangeCarData(\r\n                                  currentCarType.id,\r\n                                  \"typeGazel\",\r\n                                  \"Цельнометаллическая\"\r\n                                );\r\n                              }}\r\n                              text={\"Цельнометаллическая\"}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              display: \"inline-block\",\r\n                            }}\r\n                          >\r\n                            <CheckBox\r\n                              id=\"typeGazel2\"\r\n                              name=\"typeGazel\"\r\n                              value={currentInfo.typeGazel === \"С тентом\" || \"\"}\r\n                              onChange={() => {\r\n                                this.onChangeCarData(\r\n                                  currentCarType.id,\r\n                                  \"typeGazel\",\r\n                                  \"С тентом\"\r\n                                );\r\n                              }}\r\n                              text={\"С тентом\"}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      <div className=\"moreInfoCheckBox\">\r\n                        <div className=\"f-14\">Свойство:</div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                          }}\r\n                        >\r\n                          <CheckBox\r\n                            id=\"property1\"\r\n                            name=\"property\"\r\n                            value={\r\n                              (this.state.car &&\r\n                                this.state.car.property === \"Манипулятор\") ||\r\n                              \"\"\r\n                            }\r\n                            onChange={() => {\r\n                              this.onChange(\"Манипулятор\", \"carProperty\");\r\n                            }}\r\n                            text={\"Манипулятор\"}\r\n                          />\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                          }}\r\n                        >\r\n                          <CheckBox\r\n                            id=\"property2\"\r\n                            name=\"property\"\r\n                            value={\r\n                              (this.state.car &&\r\n                                this.state.car.property === \"Рефрижератор\") ||\r\n                              \"\"\r\n                            }\r\n                            onChange={() => {\r\n                              this.onChange(\"Рефрижератор\", \"carProperty\");\r\n                            }}\r\n                            text={\"Рефрижератор\"}\r\n                          />\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            display: \"inline-block\",\r\n                          }}\r\n                        >\r\n                          <CheckBox\r\n                            id=\"property3\"\r\n                            name=\"property\"\r\n                            value={\r\n                              (this.state.car &&\r\n                                this.state.car.property === \"Изотерм\") ||\r\n                              \"\"\r\n                            }\r\n                            onChange={() => {\r\n                              this.onChange(\"Изотерм\", \"carProperty\");\r\n                            }}\r\n                            text={\"Изотерм\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"mt-3 col-12 col-md-4 row addPhotoCarBlock\">\r\n                  <h4\r\n                    className=\"f-16 col-12 text-center\"\r\n                    style={{\r\n                      marginBottom: \"20px\",\r\n                      fontWeight: \"normal\",\r\n                    }}\r\n                  >\r\n                    Добавьте фото машины\r\n                  </h4>\r\n                  <input\r\n                    id=\"photoCar\"\r\n                    onChange={(e) => {\r\n                      let file = e.target.files[0];\r\n                      if (file.size / 1000 > 10000)\r\n                        toast.error(\"Изображение больше 10 мб!\", {\r\n                          position: toast.POSITION.TOP_CENTER,\r\n                        });\r\n                      else\r\n                        this.onChange(\r\n                          { file: file, path: URL.createObjectURL(file) },\r\n                          \"carPhoto\"\r\n                        );\r\n                    }}\r\n                    type=\"file\"\r\n                    accept=\"image/jpeg,image/png\"\r\n                    hidden\r\n                  />\r\n                  <div\r\n                    className={`inputPhoto ${\r\n                      !this.state.car.photo ? \"unload\" : \"\"\r\n                    } `}\r\n                  >\r\n                    <div\r\n                      className=\"placeholder\"\r\n                      onClick={() => {\r\n                        document.getElementById(\"photoCar\").click();\r\n                      }}\r\n                    >\r\n                      <span>Загрузить</span>\r\n                    </div>\r\n                    {this.state.car.photo && (\r\n                      <img\r\n                        src={\r\n                          this.state.car.photo\r\n                            ? this.state.car.photo.path\r\n                            : false\r\n                        }\r\n                        className=\"carPhoto\"\r\n                        alt=\"carPhoto\"\r\n                      />\r\n                    )}\r\n                    {!this.state.car.photo && <div className=\"carPhoto\" />}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row swicher-wrapper\">\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                  <div className=\"CheckBoxSwitcher-wrapper\">\r\n                    <CheckBoxSwitcher\r\n                      lableClassname=\"f-16\"\r\n                      val={this.state.isExtra}\r\n                      onChange={() => {\r\n                        this.setState({\r\n                          isExtra: !this.state.isExtra,\r\n                        });\r\n                      }}\r\n                      lable=\"Дополнительные параметры\"\r\n                    />\r\n                  </div>\r\n                  <CSSTransitionGroup\r\n                    transitionName=\"height-animation-item\"\r\n                    transitionEnterTimeout={300}\r\n                    transitionLeaveTimeout={300}\r\n                    style={{\r\n                      display: \"contents\",\r\n                    }}\r\n                  >\r\n                    {this.state.isExtra && (\r\n                      <div className=\"checkboxGroup\">\r\n                        {extraParams.map((item, index) => {\r\n                          return (\r\n                            <div key={index} className=\"checkboxParam\">\r\n                              <CheckBox\r\n                                id={`additionally${item.id}`}\r\n                                name={`additionally${item.id}`}\r\n                                value={this.state.car.additionally.find(\r\n                                  (itemX) => itemX.id == item.id\r\n                                )}\r\n                                onChange={() => {\r\n                                  this.onChangeParams(\"additionally\", item.id);\r\n                                }}\r\n                                text={item.name}\r\n                              />\r\n                              {item.additionFields &&\r\n                                this.state.car.additionally.find(\r\n                                  (itemX) => itemX.id === item.id\r\n                                ) &&\r\n                                item.additionFields.map((itemField, index) => {\r\n                                  return (\r\n                                    <itemField.field\r\n                                      key={index}\r\n                                      {...itemField.props}\r\n                                      value={this.getIfExit(\r\n                                        this.state.car.additionally,\r\n                                        item.id,\r\n                                        itemField.name\r\n                                      )}\r\n                                      onChange={(e) => {\r\n                                        this.onChangeParamsFiels(\r\n                                          \"additionally\",\r\n                                          item.id,\r\n                                          itemField.name,\r\n                                          e.target.value\r\n                                        );\r\n                                      }}\r\n                                    ></itemField.field>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                  </CSSTransitionGroup>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                  <div className=\"CheckBoxSwitcher-wrapper\">\r\n                    <CheckBoxSwitcher\r\n                      val={this.state.isContract}\r\n                      onChange={() => {\r\n                        this.setState({\r\n                          isContract: !this.state.isContract,\r\n                        });\r\n                      }}\r\n                      lable=\"Заключение договора\"\r\n                    />\r\n                  </div>\r\n                  <CSSTransitionGroup\r\n                    transitionName=\"height-animation-item\"\r\n                    transitionEnterTimeout={300}\r\n                    transitionLeaveTimeout={300}\r\n                    style={{\r\n                      display: \"contents\",\r\n                    }}\r\n                  >\r\n                    {this.state.isContract && (\r\n                      <div className=\"checkboxGroup contract\">\r\n                        {contractParams.map((item, index) => {\r\n                          return (\r\n                            <div key={index} className=\"checkboxParam\">\r\n                              <CheckBox\r\n                                id={`contractParams${item.id}`}\r\n                                name={`contractParams`}\r\n                                value={this.state.car.contractInfo.find(\r\n                                  (itemX) => itemX.id === item.id\r\n                                )}\r\n                                onChange={() => {\r\n                                  this.onChangeParams(\"contractInfo\", item.id);\r\n                                }}\r\n                                text={item.name}\r\n                              />\r\n                              {item.additionFields &&\r\n                                this.state.car.contractInfo.find(\r\n                                  (itemX) => itemX.id === item.id\r\n                                ) &&\r\n                                item.additionFields.map((itemField, index) => {\r\n                                  return (\r\n                                    <itemField.field\r\n                                      key={index}\r\n                                      {...itemField.props}\r\n                                      value={\r\n                                        this.getIfExit(\r\n                                          this.state.car.contractInfo,\r\n                                          item.id,\r\n                                          itemField.props.name\r\n                                        ).value\r\n                                      }\r\n                                      onChange={(val) => {\r\n                                        this.onChangeParamsFiels(\r\n                                          \"contractInfo\",\r\n                                          item.id,\r\n                                          itemField.props.name,\r\n                                          val\r\n                                        );\r\n                                      }}\r\n                                    ></itemField.field>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                  </CSSTransitionGroup>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-4\">\r\n                  <div className=\"CheckBoxSwitcher-wrapper\">\r\n                    <CheckBoxSwitcher\r\n                      val={this.state.isPayment}\r\n                      onChange={() => {\r\n                        this.setState({\r\n                          isPayment: !this.state.isPayment,\r\n                        });\r\n                      }}\r\n                      lable=\"Способы оплаты водителю\"\r\n                    />\r\n                  </div>\r\n                  <CSSTransitionGroup\r\n                    transitionName=\"height-animation-item\"\r\n                    transitionEnterTimeout={300}\r\n                    transitionLeaveTimeout={300}\r\n                    style={{\r\n                      display: \"contents\",\r\n                    }}\r\n                  >\r\n                    {this.state.isPayment && (\r\n                      <div className=\"checkboxGroup\">\r\n                        {paymentParams.map((item, index) => {\r\n                          return (\r\n                            <div key={index} className=\"checkboxParam\">\r\n                              <CheckBox\r\n                                id={`paymentParams${item.id}`}\r\n                                name={`paymentParams${item.id}`}\r\n                                value={\r\n                                  this.state.car.paymentInfo.length &&\r\n                                  !!this.state.car.paymentInfo.find(\r\n                                    (itemX) => itemX.id === item.id\r\n                                  )\r\n                                }\r\n                                onChange={() => {\r\n                                  this.onChangeParams(\"paymentInfo\", item.id);\r\n                                }}\r\n                                text={item.name}\r\n                              />\r\n                              {item.additionFields &&\r\n                                this.state.car.paymentInfo.find(\r\n                                  (itemX) => itemX === item.id\r\n                                ) &&\r\n                                item.additionFields.map((itemField, index) => {\r\n                                  return (\r\n                                    <itemField.field\r\n                                      key={index}\r\n                                      {...itemField.props}\r\n                                      value={\r\n                                        this.state.car.paymentInfo[\r\n                                          itemField.props.name\r\n                                        ]\r\n                                      }\r\n                                      onChange={(e) => {\r\n                                        this.onChangeParamsFiels(\r\n                                          \"paymentInfo\",\r\n                                          item.id,\r\n                                          itemField.props.name,\r\n                                          e.target.value\r\n                                        );\r\n                                      }}\r\n                                    ></itemField.field>\r\n                                  );\r\n                                })}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    )}\r\n                  </CSSTransitionGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row slide-step justify-content-end\">\r\n                <Button\r\n                  type=\"fill\"\r\n                  className=\" input-action\"\r\n                  paddingHorizontal=\"40px\"\r\n                  onClick={\r\n                    this.state.isEditing ? this.editTemplate : this.saveTemplate\r\n                  }\r\n                >\r\n                  Сохранить\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!this.state.isFething && this.state.notFound && <NoMatch />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(OfferCreate1));\r\n"],"sourceRoot":""}